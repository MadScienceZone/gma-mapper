'\" t
'\" *** 332 ***
'\" <<ital-is-var>>
'\" <<bold-is-fixed>>
.TH MAPPER 6 "GMA Toolkit 5.2" 05-Mar-2023 "Games" \" @@mp@@
.SH NAME
mapper \- GMA battle grid map
.SH SYNOPSIS
'\" <<usage>>
.na
.B gma
.B mapper
.B \-\-
.B \-\-help
.LP
.B gma
.B mapper
.RB [ \-display
.IR name ]
.RB [ \-geometry
.IR value ]
.RI [ "other wish options" ]
.B \-\-
.RB [ \-A ]
.RB [ \-a ]
.RB [ \-B ]
.RB [ \-b
.IR pct ]
.RB [ \-C
.IR file ]
.RB [ \-c
.RI [ image\fB=\fP ] name [\fB:\fP color ]]
.RB [ \-D ]
.RB [ \-d ]
.RB [ \-G
.IR n [\fB+\fP x [\fB:\fP y ]]]
.RB [ \-g
.IR n [\fB+\fP x [\fB:\fP y ]]]
.RB [ \-h
.IR hostname ]
.RB [ \-k ]
.RB [ \-l ]
.RB [ \-M
.IR module ]
'\".RB [ \-m ]
.RB [ \-n ]
.RB [ \-P
.IR pass ]
.RB [ \-p
.IR port ]
.RB [ \-s
.IR file ]
.RB [ \-t
.IR transcript ]
.RB [ \-u
.IR name ]
.RB [ \-X
.IR proxyhost ]
.RB [ \-x
.IR proxyurl ]
.RB [ \-\-button\-size
.BR small | medium | large ]
.RB [ \-\-curl\-path
.IR path ]
.RB [ \-\-curl\-url\-base
.IR url ]
.RB [ \-\-dark ]
.RB [ \-\-mkdir\-path
.IR path ]
.RB [ \-\-nc\-path
.IR path ]
.RB [ \-\-no\-blur\-all ]
.RB [ \-\-scp\-dest
.IR path ]
.RB [ \-\-scp\-path
.IR path ]
.RB [ \-\-scp\-server
.IR hostname ]
.RB [ \-\-ssh\-path
.IR path ]
.RB [ \-\-update\-url
.IR url ]
.RI [ mapfiles... ]
.LP
.B gma
.B mapper
.RB [ \-display
.IR name ]
.RB [ \-geometry
.IR value ]
.RI [ "other wish options" ]
.B \-\-
.RB [ \-\-animate ]
.RB [ \-\-no\-animate ]
.RB [ \-\-blur\-all ]
.RB [ \-\-no\-blur\-all ]
.RB [ \-\-blur\-hp
.IR pct ]
.RB [ \-\-button\-size
.BR small | medium | large ]
.RB [ \-\-config
.IR file ]
.RB [ \-\-character
.RI [ image\fB=\fP ] name [\fB:\fP color ]]
.RB [ \-\-chat\-history
.IR n ]
.RB [ \-\-curl\-path
.IR path ]
.RB [ \-\-curl\-url\-base
.IR url ]
.RB [ \-\-dark ]
.RB [ \-\-debug ]
.RB [ \-\-generate\-config
.IR path ]
.RB [ \-\-generate\-style\-config
.IR path ]
.RB [ \-\-guide
.IR n [\fB+\fP x [\fB:\fP y ]]]
.RB [ \-\-host
.IR hostname ]
.RB [ \-\-keep\-tools ]
.RB [ \-\-major
.IR n [\fB+\fP x [\fB:\fP y ]]]
'\".RB [ \-\-master ]
.RB [ \-\-mkdir\-path
.IR path ]
.RB [ \-\-module
.IR module ]
.RB [ \-\-nc\-path
.IR path ]
.RB [ \-\-no\-chat ]
.RB [ \-\-password
.IR pass ]
.RB [ \-\-port
.IR port ]
.RB [ \-\-preload ]
.RB [ \-\-proxy\-host
.IR proxyhost ]
.RB [ \-\-proxy\-url
.IR proxyurl ]
.RB [ \-\-scp\-dest
.IR path ]
.RB [ \-\-scp\-path
.IR path ]
.RB [ \-\-scp\-server
.IR hostname ]
.RB [ \-\-ssh\-path
.IR path ]
.RB [ \-\-style
.IR file ]
.RB [ \-\-transcript
.IR filename ]
.RB [ \-\-update\-url
.IR url ]
.RB [ \-\-username
.IR name ]
.RI [ mapfiles... ]
.ad
'\" <</usage>>
.LP
Options cannot be combined into a single CLI argument.
They are evaluated in the order they are received.
While not recommended (nor guaranteed to always be the case), it happens that
options specified after 
.IR mapfile s 
will affect only 
.IR mapfile s 
named following those
later options. Thus, if a
.I mapfile
has a name beginning with a hyphen, it is necessary to specify it in some
sneaky way, such as prefixing it with a 
.RB \*(lq ./ \*(rq.
.LP
(Depending on your system, you may need to run as
.B wish
.B mapper.tcl
\&...)
.SH DESCRIPTION
.LP
The
.B mapper
program displays a battle grid map for the players to see their tactical positions
with respect to their opponents and features of their environment (e.g., dungeon
rooms).
.LP
If one or more map file names are listed on the command line, those files are loaded
into the grid display.  Otherwise, a blank map grid is shown.  Map files may subsequently
be loaded via interactive commands or upon request from a control service (see the
.B \-h
option and \*(lqControl Protocol\*(rq section, below).
.LP
See notes at the bottom of this manpage for installation requirements.
.SH "HELPER PROGRAMS"
.LP
The
.B mapper
client makes use of a few other programs to facilitate the efficient handling
of data transfers. These are only used if the client is working in networked mode rather
than as a stand-alone map drawing program.
'\" <<desc>>
.TP
.B curl
Assuming the GM (or whomever is administrating the map assets) has arranged for a web server
to host content for the map, the
.B mapper
client will invoke the
.BR curl (1)
program to actually retrieve the files from that server. If needed, you will need to provide
options and/or configuration file parameters as documented below to let
.B mapper
know where to find the 
.B curl
binary and what options it needs to find the web server, navigate through proxy servers, etc.
.TP
.B scp
For users with privileges to
'\" <</ital-is-var>>
.I store
'\" <<ital-is-var>>
data on the web server (generally, this would be the GM or other designated administrative users,
not the general player group), 
.B mapper
will invoke
.BR scp (1)
to copy new data files up to the server. For example, in store-and-forward mode, when opening
a local data file or pushing map contents out to other clients, 
.B mapper
checks to see if the server has the data file(s) available for everyone to download. If not,
it will use
.B scp
to upload them to the server before sending out a command to peer clients to retrieve them.
.RS
.LP
This requires that the user is authorized to perform this action on the remote server.
Usually this is done by having an SSH certificate loaded via
.BR ssh-agent (1)
and the server set up to recognize that for the needed operations without requiring a
password to be manually entered.
.RE
.TP
.B ssh
Along with the use of
.B scp
to transfer new data to the web server, 
.B mapper
will use
.BR ssh (1)
to create directories and set file permissions as needed on the server for the content being
uploaded. 
'\" <</>>
.SH OPTIONS
.LP
The following options control the behavior of
.BR mapper .
'\" <<list>>
.TP 16
.BR \-A , \-\-no\-animate
Suppress the animation effects enabled by the 
.B \-a
.RB ( \-\-animate )
option. This is the default, so it only needs to be given to cancel an
.B \-a
option which appeared previously or which was read from a configuration file.
.TP
.BR \-a , \-\-animate
This option causes
the mapper to make a lame attempt to \*(lqanimate\*(rq the appearance
of objects being drawn onto the screen by updating the display after each one.
(The author was feeling oddly nostalgic about working with the Tektronix storage-screen
computer displays of his childhood at the time. If you don't know what that means, go
watch an episode of the 1970s-era Battlestar Galactica and look at most of their
computer screens.)
.TP
.BR \-B , \-\-blur\-all
Normally, the imprecision introduced to health bar displays by the 
.B \-b
.RB ( \-\-blur\-hp )
option applies only to \*(lqmonsters\*(rq (opponents). With this option, it
applies to all participants.
.TP
.B \-\-no\-blur\-all
Cancels the effect of the
.B \-B
.RB ( \-\-blur\-all )
option.
.TP
.BI "\-b\fR,\fP\-\-blur\-hp " pct
This option \*(lqblurs\*(rq the health bar displays by rounding off the displayed
hit point total to only be accurate in
.IR pct -percent
intervals. For example, a setting of
.B 10
means the health bar will blur the value by 10%; in other words, rather than
every hit point showing proportionally on the health bar, the health bar will only
show 10 possible intermediate values, corresponding to the hit points being 1\-9%,
10\-19%, 20\-29%, ..., 90\-99% of the total, as well as 0% and 100%.
Thus, higher 
.I pct
values indicate less accurate displays. 
.RS
.LP
Setting 
.I pct
to 0 (or less) indicates that no blurring is desired; in this case the display is
precisely accurate. This is the default, but note that the hit points reported may
be blurred on the server (GM)'s side independently.
.LP
Once a creature reaches 0 hit points, no further blurring is
done, so the bleed-out sequence is accurate (but this is fairly quick for almost all
creatures and is of less consequence than the hit point totals while they are still
alive and fighting, so this was considered a better course of action).
.RE
.TP
.BI "\-\-button\-size " size
Change the size of the toolbar buttons. The
.I size
value may be any string starting with
.BR s ,
.BR m ,
or
.BR l ,
representing small, medium, or large-size icons. Small buttons are the default.
.TP
.BI "\-C\fR,\fP\-\-config " file
Read a set of command-line options from the named
.I file
as if they appeared at this point in the list of command-line
options. Only the long-form option names are allowed and are
given without the leading hyphens.
The file must contain a single option per line. Options which
take a parameter are separated from their parameter with an equals
sign (although this is currently not supported in the command line
itself). For example, a configuration file might contain the
following:
'\" <<TeX>>
'\" \begin{SourceCode}
'\"# My configuration settings
'\"scp-dest=/usr/local/game-support
'\"scp-server=www.example.org
'\"curl-url-base=https://www.example.org/game
'\"no-animate
'\"keep-tools
'\" \end{SourceCode}
.RS
.RS
.nf
.na
.B "# My configuration settings"
.B "scp-dest=/usr/local/game-support"
.B "scp-server=www.example.org"
.B "curl-url-base=https://www.example.org/game"
.B "no-animate"
.B "keep-tools"
.ad
.fi
.RE
'\" <</TeX>>
.LP
Note that any line whose very first character is a pound sign
.RB (\*(lq # \*(rq))
is ignored as a comment.
.LP
If the file
.B ~/.gma/mapper/mapper.conf
exists, it is read first before command-line options or
(other) configuration files are loaded.
.LP
Note that more than one
.B \-\-config
(and/or
.BR \-C )
option may be given, in which case the files are read in the order they appear in the 
command line. This may be used to split up options into different files, such as general
settings common to all sessions, and specific settings based on networks or different games.
.RE
.TP
.BI "\-c\fR,\fP\-\-character \fR[\fP" image =\fR]\fP name \fR[\fP: color \fR]\fP
Add player
.I name
to the list of standard players tracked by the mapper.
This is the list that appears in the pop-up menu for placing
people onto the map.  If 
.I color
is also specified, that color is used for the threat zone
highlighting.  This may be a standard X11 color name, or
an RGB value in the form 
.BI # rgb,
.BI # rrggbb,
or
.BI # rrrgggbbb.
The default is \*(lqblue\*(rq.
.RS
.LP
If an image file will be used with the character that's not the same
name as the character, specify it as
.IB image = name
in this option.
.LP
Multiple
.B \-c
options may be given.  Each adds another name to the list.
.LP
Note that when the mapper is networked with the GM's console, the
default list of names actually comes from the GM's console so it
should not be necessary to specify these names to the client from
the command line or configuration file.
.RE
.TP
.BI "\-\-chat\-history " n
Limits the retained chat history to 
.I n
messages. When
.B mapper
starts, it reloads the chat history it had cached from the previous
session on the current
.I host
and 
.I port
but if that results in more than
.I n
messages being in the history, the list of messages is truncated to
the most recent
.I n
(both in-memory and in the cache file). Any additional messages
received will be kept, so the actual history will be a little
larger than
.I n
until the next time 
.B mapper
is started. If
.I n
is less than or equal to 0,
then no limit is placed on the history size.
The default limit is 512.
.TP
.BI "\-\-curl\-path " path
Specify the path to the
.BR curl (1)
program on your system, if the built-in default doesn't work for you.
This is used when fetching image and map files from the server.
.TP
.BI "\-\-curl\-url\-base " url
Specify the base URL on the data server. The files downloaded by mapper
clients will be in a directory hierarchy appended to this string.
.TP
.BR \-D , \-\-debug
Increase debugging output level. Multiple 
.B \-D 
options further increase verbosity of debugging messages. These are displayed
in a separate window.
.TP
.BR \-d , \-\-dark
This option changes the default color palette to use a darker background which
may be easier to look at for longer periods of time. On macOS systems running
up-to-date versions of Tcl/Tk (not the default legacy version supplied by
Apple), dark mode is automatically selected if the macOS session is also
configured for dark mode.
.TP
.BI "\-G\fR,\fP\-\-major " n
Make every
.IR n th
gridline green (very thick lines).
This is for major guide lines on the map. 
.TP
.BI "\-G\fR,\fP\-\-major " n + o
As above, but offset the major guide lines to the right and down by
.I o
lines.
The
.B +
character is required, but the value of
.I o
may be negative, so the option 
.RB \*(lq \-G
.IB n +\-3\fR\*(rq\fP
would move the lines to the left and up by 3 lines.
.TP
.BI "\-G\fR,\fP\-\-major " n + x : y
If expressed this way, rather than use the same offset in both directions, move the guide
lines 
.I x
lines to the right and
.I y
lines down.
.TP
.BI "\-g\fR,\fP\-\-guide " n
Make every
.IR n th
gridline red (thick lines).
This is for minor guide lines. The value of
.I n
may be specified in all the same ways as for the
.BR \-G / \-\-major
option (see above).
.TP
.BI "\-\-generate\-config " path
Append a set of example settings to the file named in
.IR path .
This will include the set of options you might want to configure
in the mapper, most of which will be commented out. This is intended
to make it easier for you to create a configuration file for the 
mapper without having to remember what all of the options are.
In reality you won't likely need most of them.
.RS
.LP
After writing to this file, the mapper client will exit.
.RE
.TP
.BI "\-\-generate\-style\-config " path
Append a set of example style settings to the file named
in
.IR path .
This will include all possible style definitions. Their built-in
default values are also provided, so that if this file were loaded
as the
.I style.conf
file of the mapper, it should result in the same appearance it
normally would have. The intent is to help you get started configuring
the styles of the mapper and to see what the mapper's settings would
be if you didn't override them. You should delete or comment out any
entries you wish to leave at the built-in default values.
.RS
.LP
After writing to this file, the mapper client will exit.
.RE
.TP
.B \-\-help
Print a summary of the command invocation options and exit.
.TP
.BI "\-h\fR,\fP\-\-host " hostname
Connect to a map control service running on the designated host.  This will 
send updates to item positions, display of rooms, etc.
If this option is not specified, no control connection is made, and the mapper
runs in stand-alone mode.
.TP
.BR \-k , \-\-keep\-tools
Normally, map clients have their toolbars turned off to maximize
the available screen space for the battle map. The GM can turn on and off their toolbars from
his console as needed.  If this option is given, this causes the client to unconditionally
display its toolbar anyway. This is used for the main map run by the GM or whomever else is
managing the group map and needs the toolbar active, or if people just want to keep the toolbar all
the time.
.TP
.BR \-l , \-\-preload
Pre-load all the cached images into memory at start-up, instead of loading them
as needed during the map's operation. Note that this only loads cached images
which are new enough that the mapper wouldn't check the server for newer versions
anyway, thus allowing a mapper client to be restarted mid-game with a minimum of
impact to game performance.
.TP
.BI "\-\-mkdir\-path " path
Specify the 
.I "server-side"
path to the
.BR mkdir (1)
program which will be used when uploading files
'\" <</ital-is-var>>
.I to
'\" <<ital-is-var>>
the data server (authorized users only).
.TP
.BI "\-M\fR,\fP\-\-module " module
Use the module ID code
.I module
for this session. This is used to differentiate server-side resources
between campaigns which have conflicting names. This is only needed 
for the mapper clients used as the forwarder in store-and-forward mode
(typically the GM's own client).
.TP
.BI "\-\-nc\-path " path
Specify the path to the
.BR nc (1)
program which will be used when sending files
'\" <</ital-is-var>>
.I to
'\" <<ital-is-var>>
the data server (authorized users only) through a SOCKS proxy server.
.TP
.BR \-n , \-\-no\-chat
Suppress the display of incoming chat messages including die rolls.
.TP
.BI "\-P\fR,\fP\-\-password " pass
For servers which require authentication, this specifies the password to gain entry to that server.
This is a fairly simple authentication mechanism intended to block nuisance connections, spam,
and accidental connections of legitimate clients to the wrong game server. If 
.I pass
is given as a single question mark
.RB (\*(lq ? \*(rq),
then the user will be prompted to enter their password manually when connecting to the server.
This avoids placing the plaintext password on the command line or in a configuration file.
.TP
.BI "\-p\fR,\fP\-\-port " port
If the
.B \-h
.RB ( \-\-host )
option is given, connect to the specified TCP
.I port
number on that host.  The default is port 2323.
'\" .TP
'\" .BI \-S " hostname"
'\" Connect to the map server via SOCKS5 proxy host with the
'\" given
'\" .IR hostname .
'\" .TP
'\" .BI \-s " port"
'\" Specify the TCP port for the SOCKS5 proxy named with the
'\" .B \-S
'\" option.
'\" .TP
'\" .BI \-U " user"
'\" Specify the user name for the SOCKS5 proxy server, if needed.
.TP
.BI "\-\-scp\-dest " path
Specify the 
.I server-side
directory into which files will be uploaded (authorized users only).
This will be the top-level data directory for the mapper; subdirectory
names will be appended to this string.
.TP
.BI "\-\-scp\-path " path
Specify the path to the
.BR scp (1)
program which will be used to send files
'\" <</ital-is-var>>
.I to
'\" <<ital-is-var>>
the data server. (Authorized users only.)
.TP
.BI "\-\-scp\-server " hostname
The host name of the storage server. Only used when sending files
'\" <</ital-is-var>>
.I to
'\" <<ital-is-var>>
the server (authorized users only).
.TP
.BI "\-\-ssh\-path " path
Specify the path to the 
.BR ssh (1)
program used to send files
'\" <</ital-is-var>>
.I to
'\" <<ital-is-var>>
the storage server (authorized users only).
.TP
.BI "\-\-style " file
Loads custom style definitions for fonts, colors, and so forth from the named
.IR file .
If this option is not specified but the file
.B ~/.gma/mapper/style.conf
exists, that file will be read by default. See
.BR style.conf (5)
for details about what can go in this file.
.TP
.BI "\-t\fR,\fP\-\-transcript " path
Records all chat window activity (including results of die rolls) to the
specified file
.IR path .
If this file exists, it will be appended to with the new information.
.RS
.LP
The following special tokens may appear in the
.I path
string, which will be replaced with values based on the time of day
the file is opened:
.TP 4
.B %a
Mon, Tue, etc.
.TP
.B %A
Monday, Tuesday, etc.
.TP
.B %b
Jan, Feb, etc.
.TP
.B %B
January, February, etc.
.TP
.B %d
Day of month (1\-31).
.TP
.B %j
Julian day of the year.
.TP
.B %m
Month (01\-12).
.TP
.B %y
Year (00\-99).
.TP
.B %Y
Year (all digits).
.TP
.B %H
Hour (00\-23).
.TP
.B %I
Hour (01\-12).
.TP
.B %M
Minutes (00\-59).
.TP
.B %S
Seconds (00\-59).
.TP
.B %p
AM or PM.
.TP
.B %D
Date (%m/%y/%d).
.TP
.B %r
Time (%I:%M:%S %p).
.TP
.B %R
Time (%H:%M).
.TP
.B %T
Time (%H:%M:%S).
.TP
.B %Z
Time zone name.
.RE
.TP
.BI "\-\-update\-url " url
Specifies the URL where updated versions of the 
.B mapper
program may be obtained. This enables automatic upgrades. The
.B mapper
will, with the user's approval, download updated versions of itself
from this URL and install them.
.TP
.BI "\-u\fR,\fP\-\-username " name
Sets the name used to identify you amongst the other players on your server.
If this option is not provided, your current system username will be used
instead.
.TP
.BI "\-X\fR,\fP\-\-proxy\-host " host \fR[\fP: port \fR]\fP
For sending files
'\" <</ital-is-var>>
.I to
'\" <<ital-is-var>>
the server (for authorized users only), use the specified SOCKS5 proxy
server. (E.g.,
.BR "\-X proxy.example.org:1080" .)
.TP
.BI "\-x\fR,\fP\-\-proxy\-url " proxyurl
Use the given URL to connect through a proxy server to fetch image data.
This does not affect the connection to the map server used by GMA (yet).
(E.g., 
.BR "\-x http://proxy.example.org:1080" .)
'\" <</>>
.SH "INVOCATION"
.LP
As of this writing, the mapper still has not been ported to the new GMA
code in Python, and is still implemented as a Tcl/Tk script.  This means
you need to have a Tcl/Tk interpreter installed on your system. (See 
.B "http://tcl.tk"
if you need more information about that.) Since it's a GUI application,
it is run using the 
.B wish
command (the Tcl Windowing Shell).
.LP
We have noted that at least on the Mac platform, the
.B wish
program will refuse to let you expand the map window larger than
the largest dimensions of the screen(s) when it was launched,
so you want to plug in any projector or external displays before
starting the map.
.SH "INTERACTIVE USAGE"
.LP
The mapper shows the dungeon area around the players and includes features which
are helpful for managing game mechanics, particularly those relating to combat.
It is intended to be fairly self-explanatory (and I don't have time to thoroughly
document everything at the moment), so the following brief notes will hopefully suffice
to help a new user navigate its quirks.
.LP
The system menu bar is not used for this application, and is left to whatever the
.B wish
program sets it to for generic scripts. Instead, all of the interaction with the mapper
is done through its toolbar and context menu.
.SS "Tool Bar"
.LP
Across the top of the map is a graphical toolbar. Click on each button to activate its features. Note that some of these turn on/off different modes of operation for the map. When this happens, the mouse cursor will change to show the mode the map is currently in.
.LP
Each button is described briefly below.
The first block of buttons control the mapper's mode of operation.
They function as radio buttons (only one is active at a time,
and selecting one de-selects the previously selected one).
'\" <<list>>
.TP 10
Line Tool (cross-hair cursor)
Selects the line drawing tool. When this tool is active, click
the left button to start drawing a line, then click it again at
the other end of the line. You may continue clicking to get multiple
connected line segments (which all count as a single object on the
map). When finished, press the Escape key or click the middle button.  Cancel by pressing Escape or the middle button without having 
defined any points on the line at all.
Note that the current FILL color (not OUTLINE color) is used to
draw the line on the map.
.TP
Rectangle Tool (square cursor)
Selects the rectangle drawing tool. When this tool is active, click
the left button where you want one corner of the rectangle
to go, then click again where the diagonally opposite corner
should go.
The rectangle will be outlined in the OUTLINE color and filled
in with the FILL color.
Cancel by pressing Escape or the middle button.
.TP
Polygon Tool (polygon cursor)
This works like the Line Tool except that the region inside the
shape defined by the line segments is filled in with the FILL color,
while the outline is colored in the OUTLINE color.
.RS
.LP
Note that when this tool is selected, the two option buttons 
become active, offering some different options for how the lines
of the polygon are to be joined:
'\" <<list>>
.TP 8
Corner
Each time you click on this button, it cycles through the different
corner-join options: beveled, mitered, and round.
.TP
Spline
Each time you click on this button, it cycles through the spline 
levels from 0 (no splines, just straight lines), to 9 (use 9
lines between points to make a smooth curve).
.RE
'\" <</>>
.TP
Ellipse Tool (circle cursor)
This works like the Rectangle Tool except that it draws an elliptical shape inscribed within (tangent to) the rectangular area defined
by the two mouse clicks.
.TP
Arc Tool (diamond crosshair cursor)
This tool is for making various semicircular shapes. Its operation
is a little more complex than the others. When this tool is
active, the option is also active, allowing you to choose the
type of arc to create:
.RS
'\" <<desc>>
.TP 10
Arc type
Each time you click on this option button, it cycles through the
choices of arc types: pie slice, chord, and arc.
.LP
First, draw the elliptical shape for the arc (as if it were a
complete ellipse) as described for the Arc Tool. Then, move the
mouse horizontally to rotate the arc and vertically to adjust the
length of the arc. When satisfied, click the left button to complete
the arc.
Cancel by pressing Escape.
.RE
'\" <</>>
.TP
Text Tool (i-beam cursor)
This is used for placing text on the map. Its operation works much
like the stamp tool (q.v.), in that left-clicking on the canvas will
place a new copy of the current string at that location. If there is
no current string, you will be prompted to enter one.  Right-clicking
will prompt you for a new string rather than using the current one.
The current string is displayed below the tool bar.
.RS
.LP
With this tool active, a font selection button is available. Clicking
this toggles the font selection dialog. Changing the font in that dialog
will alter the font of the most recently placed text object (as long as
the text tool remains active) and sets the font for future text objects.
.LP
There is also an anchor selection button while this tool is active. This
shows as a centered cross (+) to indicate that the text will be centered
around the point where the mouse is clicked. Clicking on the anchor selection
button will cycle through all of the anchor directions available: north, south,
northeast, etc. These mean that the text will be aligned so that the point
where the mouse is clicked will be that direction from the text. Thus, for example,
selecting an anchor of \*(lqwest\*(rq (incidated by a left-pointing arrow) will
center the text vertically but align it horizontally so that the point
is to the left of the text.
.RE
.TP
Move Tool (iron cross cursor)
This is the default mode, and the one you should keep the mapper
in when not changing the map features. With this mode, you can
drag creatures around the map as described below.
.RS
.LP
If the mouse is not over a creature token when starting to
drag the mouse, the map grid itself is dragged, providing an easy way to scroll
the map.
.LP
If you hold down the shift key while clicking the left button on the canvas in
this mode, it will briefly show a marker to draw attention to the grid square
the mouse is in.
.RE
.TP
Cut Tool (skull cursor)
With this tool active, any object you click on with the left button
will be deleted from the map immediately (no saving throw).
if you click where there are multiple overlapping objects,
you will be prompted to select which to delete. Press Escape if
you don't want to delete any of them.
.TP
Object Move Tool (multi-arrow cursor)
This tool allows the map objects (as opposed to creature tokens)
to be dragged to new locations. Note that you are dragging the object's
.I "reference point"
with the cursor. Once an object has been moved any distance with the
mouse, the arrow keys (or the standard 
.BR vi (1)
movement keys) may be used to \*(lqnudge\*(rq the object by one pixel
at a time up, down, left, or right; additionally the keys
.BR u ,
.BR d ,
.BR f ,
and
.BR b
may be used to move the object up, down, to the front, and to the back in the stacking order
'\" <</ital-is-var>>
.RI ( z
coordinate), respectively.
'\" <<ital-is-var>>
.TP
Stamp Tool (star cursor)
This allows graphical tiles to be \*(lqstamped\*(rq onto the map.
If there is a current tile already chosen, a new copy of it is placed
on the map with the upper-left corner at the point the mouse was clicked.
If no such tile was chosen, you will be prompted for its name. Right-clicking
will force the selection of a new tile image rather than re-stamping the
current one. See
.BR rendersizes (6)
for more information about the format of these tile files. They should be
rendered and (if using a map server) uploaded ahead of time so they are
visible in the map.
.LP
The next block of buttons control the appearance of
any new objects added to the map.
.TP
Fill Mode
Clicking on this button toggles whether the shape will be filled
or not. (Somewhat counter-intuitively, lines are filled with the
FILL color, not the OUTLINE color, so turning off fill will just
give you invisible lines.)
.TP
Fill Color
Clicking on this button selects the FILL color to be used to
fill in new object areas. This is disabled if fill mode is turned
off.
.TP
Outline Color
Clicking on this button selects the OUTLINE color to be used to
draw around new object areas.
.TP
Grid Snap
Clicking on this button cycles through the grid snap options:
.RS
'\" <<desc>>
.TP 
Off
Points may be added anywhere on the canvas (free form drawing).
.TP
1
Points may only be added at the intersections of grid lines.
.TP
1/2
Points may be added at grid intersections, and 1/2 way between them
horizontally or vertically.
.TP
1/3
Points may be added at grid intersections, and every 1/3 of the way
between them
horizontally or vertically.
.TP
1/4
Points may be added at grid intersections, and every 1/4 of the way
between them 
horizontally or vertically.
.RE
'\" <</>>
.TP
Line Width
Clicking on this button cycles through the line widths from thinnest to 
thickest.
'\" <</>>
.LP
The next block of buttons clear the map:
'\" <<desc>>
.TP
Clear Features
Clicking this button wipes the map clean except for creatures.
.TP
Clear Creatures
Clicking this button removes all creatures from the map.
.LP
The next block gives access to tactical displays.
.TP
Toggle Combat Mode
Normally, the GM console will automatically turn on combat mode,
but if you want to manually enable or disable it, click this button.
When active, the threat zones around each creature are highlighted
using colored cross-hatch patterns.
.RS
.LP
If health tracking is in effect (i.e., for creature objects which
have a non-empty 
.B HEALTH
attribute), a health bar is displayed across the bottom of each creature's token.
The appearance of this bar depends on the current health of the creature.  For
the description that follows, the significant health statistics are:
'\" <<desc>>
.TP
.I t
The total number of hit points the creature has when at maximum health.
.TP
.I x
The extra points (below zero) which define the amount of lethal damage
a dying creature can sustain before being dead. In Pathfinder and compatible
d20 games (and perhaps others), this is the Constitution score for the creature.
.TP
.I l
The number of hit points worth of 
.I lethal
damage sustained by the creature.
.TP
.I n
The number of hit points worth of
.I non-lethal
(i.e., subdual)
damage sustained by the creature.
'\" <</>>
.LP
The health bar indicates graphically the creature's health condition and relative
amount of damage they have taken, as follows:
'\" <<desc>>
.TP 13
Full health
A creature in full health will have a solid green bar across the entire width of their token's space
on the map.
.TP
Injured
The full width of the token space represents the creature's total (maximum) hit points 
.RI ( t ).
A red bar will start encroaching over the green in proportion to the number of lethal hit points
.RI ( l )
they have taken. A yellow bar will likewise represent the number of non-lethal hit points
.RI ( n )
taken. Thus, the health bar will be shifting more from green to red/yellow as the creature gets more
and more injured, until as it nears the point of meeting its maker, the entire bar will be red.
.TP
Flat-footed
A flat-footed creature (which does not also have any of the conditions listed below) will have a blue
frame around the health bar.
.TP
Staggered
When staggered due to non-lethal damage (i.e.,
.IR n >0
and
.IR l + n = t ),
the health bar has a yellow frame around it. The creature will move to unconscious if it suffers more
damage.
.TP
Unconscious
When unconscious due to non-lethal damage (i.e.,
.IR n >0
and
.IR l + n > t),
the health bar has a violet frame around it.
.TP
Disabled
When disabled, a red frame will appear around the health bar. 
The mapper will automatically assume disabled condition if a creature has exactly 0 hit points left (i.e.,
.IR l = t .)
.TP
Dying
When at negative hit points but still above the death level
.RI (\- x < t \- l < 0 ),
a red frame will appear but the red bar will retreat to the left as more lethal damage is taken,
until it's fully black at the point of death.
.TP
Stable
If dying but stabilized, the health bar will have a brown frame around it.
.TP
Dead
When completely mortally wounded
.RI ( t \- l <=\- x ),
the health bar is solid black.
.RE
'\" <</>>
.TP
Show HP Values
This toggles the display of health statistics for players (not monsters) over the
health bars. If only lethal damage has been inflicted, it displays
.RI \*(lq hp / max \*(rq
where
.I hp
is the current number of hit points remaining, out of a maximum of
.I max
hit points. If non-lethal damage has been suffered, then the display is
.RI \*(lq hp ( nl )\*(rq
where
.I nl
is the amount of non-lethal damage.
If a creature is fully dead, it simply says 
.RB \*(lq DEAD \*(rq.
.TP
Spell Area of Effect
This adds a spell area of effect to the battle grid. Once created,
this becomes a permanent map feature which may be removed using the
Cut Tool (q.v.).
When this tool is activated, two option buttons are enabled which allow
you to control the shape of the spell area:
.RS
'\" <<desc>>
.TP
Shape
This button cycles through the supported spell shapes: radius, cone, and ray.
.TP
Spread
This button toggles whether the spell effect \*(lqspreads\*(rq around corners.
This is not yet implemented.
.LP
Select the point of origin for the spell by clicking the left button over a
grid intersection (the tool will snap to intersections automatically). Then
move the mouse to the target point of the spell and click again to complete
the area. As you move the mouse, the spell's area and affected grids will be
shown.  The area of effect is filled in with cross-hatch patterns in the FILL
color.
Cancel by pressing Escape.
This is an active tool like the other drawing tools. When finished, select
another mode such as the Move Tool.
.RE
'\" <</>>
.TP
Ruler Tool
Selecting this tool allows you to measure the distance
along a path. Click the left button on a point, then
move the mouse to another point. If desired, multiple
points may be clicked to build a path. Middle-click or
press Escape to end the measurement.
.TP
Grid Display Toggle
Clicking this button turns on and off the display of the
gridlines on the map. This is a local display setting only,
and is not broadcast to other clients.
.TP
Die Roller
If connected to a server, this button brings up the chat window. In this window,
you may send and receive messages and die rolls to other connected users. 
This window is split into three adjustable panes, described individually below.
The division between each pane may be moved by dragging the mouse over the
separation point or pane handle.
.RS
'\" <</ital-is-var>>
'\" <<desc>>
.TP
.I "Chat Messages Pane"
In the main portion of this pane displays incoming chat messages.
Each is prefixed with the name of the sender. If the message was
addressed only to you, the tag
.RI \*(lq (private) \*(rq
is added after the sender's name. If it was sent to a specific subset
of users, their names will be listed as
.RI \*(lq "(private to alice, bob, charlie)" \*(rq.
.RS
.LP
There are two entry lines below the chat window. The top one is for sending
chat messages. Anything typed in the entry box will be transmitted when the Return
key is hit. To the left of this entry box is a menu button which controls who
the message is sent to. If \*(lq(all)\*(rq is selected, the message is sent to all
listening clients (which need not be listed in the menu; the message will be sent to
everyone at the server level). If a recipient's name is selected, it will only be
sent to them. If another recipient's name is selected, they are
.I "added to"
the list of recipients. These selections are actually toggles\(emselecting a recipient's
name again will remove them from the list. This allows for messages to be sent to
any arbitrary subset of users. Selecting \*(lq(all)\*(rq will clear all selections again.
The \*(lqrefresh\*(rq button to the right of the entry box will update the recipient selection
menu with the current set of logged-in users.
.LP
The bottom entry line is for making die rolls. Into the entry box you may type any die roll
string such as would be accepted to the
.B DieRoller.do_roll()
method as documented in
.BR dice (3).
When the Return key is pressed, this die roll is sent to the server, which will roll the
dice and transmit the results just like a chat message (which includes the currently-selected
chat recipient list). The \*(lq(i)\*(rq button to the right of the entry box will bring up
a help window explaining what may be entered for die rolls.
'\" <<ital-is-var>>
.RE
.TP
.I "Recent Rolls Pane"
The most recent 10 rolls entered into the above-mentioned entry box are kept in a list in this
pane, with the most recent on top. Clicking on the die button next to any of these will re-roll
it again. If additional modifiers are in play, they can be typed into the entry box next to the 
die button. Whatever is entered is simply appended to the original die expression after a plus sign.
Thus, entering \*(lq5\*(rq will add \*(lq+5\*(rq to the roll, and entering \*(lq1d6 fire+3\*(rq
will add \*(lq+1d6 fire+3\*(rq to the roll.
.TP
.I "Preset Rolls Pane"
A set of commonly-needed die rolls may be pre-set into the tool and then invoked using the
third pane. Clicking the \*(lq(+)\*(rq button will add a new preset by prompting for its name,
description, and die roll. The name uniquely identifies the preset within the list. The description
will appear as a tooltip for your reference when looking at your presets. The new preset is
saved on the server and will be loaded into your client every time it's started. Presets are
invoked in the same manner as described above for recent rolls. Clicking the \*(lq(\-)\*(rq
button removes the preset from the list.
.RS
.LP
If a preset name includes a vertical bar (e.g.,
.RB \*(lq 12|WillSave \*(rq),
then only the part after the bar will be displayed on-screen, but the entire name is used to
sort the presets in the window. This allows arbitrary sort ordering without cluttering the display.
.LP
The file load and save buttons at the bottom of the pane are used to load and save the preset
list to local disk files which have the format documented in
.BR dice (5).
.RE
.RE
'\" <</>>
'\" <</>>
.LP
The final block of tool buttons control global operations of the mapper:
'\" <<desc>>
.TP
Zoom In
Double the visual size of grid blocks.
.TP
Zoom Out
Halve the visual size of grid blocks.
.TP
Un-Zoom
Restore the zoom level to normal.
.TP
Load
Add all the map objects from a disk file onto the map tool, replacing all the map features
previously on the map (but not the creatures).
.TP
Merge
Like Load, but add to the existing objects rather than replacing them.
.TP
Unload
All the objects saved to a selected disk file are 
.I erased
from the map.
.TP
Push
Push the entire contents of this map client to all other clients, replacing their
current contents. (Only available in store-and-forward mode, generally only for GM use.
Since the server now tracks game state and clients and re-sync with it directly,
there is no longer a need for clients to push their contents to each other, and that
was a problematic operation anyway.)
.TP
Store and Forward
Toggles store-and-forward mode. When enabled, this changes the behavior of the following
other buttons, providing a client update path that is much more efficient and less
error-prone than streaming the object updates through the server. Stand-alone
(non-networked) map clients should use the normal mode of operation instead.
.RS
.TP 7
Load
Prompts for the selection of a map file from disk as usual. However, rather than
loading that file directly, it checks to see that the file is available from the
server by checking the local cache and (if necessary) downloading from the server.
If the file is not found by those operations, it will be uploaded to the server
(assuming the user has the proper SSH access active at the time). Other clients
are then instructed to load the map file from the server. 
.TP
Merge
As with the Load button, but merges the map file with the existing map contents
rather than replacing them.
.TP
Unload
Ensures that a server copy of the map file exists as the Load button does, but then instructs
the remote clients to delete the contents of that file rather than sending individual
object deletion commands over the network to them.
.TP
Push
Saves the current map contents to a temporary file, uploads it to the server,
and then instructs the other clients to load that file.
.RE
.TP
Sync
.I "(Note that this button's function has changed as of version 3.25.)"
This clears the contents of the mapper client and requests a fresh set of data
from the server, thus synchronizing this client to be in line with the server's
idea of the current game state. Depending on how the server is configured, it
may automatically perform this operation for you when you connect to it.
.TP
Save
Save everything on the map to a disk file. You will be prompted to decide whether
this includes creatures as well.
.TP
Exit
Exit the mapper program.
'\" <</>>
.SS "Context Menu"
.LP
Clicking the right button over an object calls up a context-sensitive menu with the
following options. Not all options will be enabled in all cases.
Most of these involve performing actions on creatures. 
'\"This only works when the creature's
'\".I "reference grid"
'\"(the upper-left most grid in the space the creature occupies for creatures larger than
'\"medium-size) is right-clicked.
'\" <<list>>
.TP 20
.BI "Remove " name
Remove the creature from the map. 
If there are multiple creatures in the same grid, a submenu will allow you to select which one to remove, or allow you to remove them all.
.TP
.B "Add Player..."
Add one or more new player tokens into the grid clicked. This pops up a dialog box to enter the relevant
information about the new player:
.RS
'\" <<desc>>
.TP
.I name
The name by which the creature is to be known on the map. This
'\" <</ital-is-var>>
.I must
'\" <<ital-is-var>>
match the name the GM console is using to track initiative, or it'll never be highlighted
when its turn comes up (otherwise the name doesn't matter).  If the name coincides with 
graphical tile images already loaded, that image will be used instead of a plain circle with
the creature's name inside.  If a range in the form
.BI # n \- m
is appended to the name (usually with a space between the name and this notation),
then 
.IR m \- n +1
copies of the creature are added in a series of grid spaces starting with the one right-clicked
and continuing to the right.  For example, entering the name
\*(lqOrc #1\-3\*(rq will create three creatures, named
\*(lqOrc #1\*(rq,
\*(lqOrc #2\*(rq,
and
\*(lqOrc #3\*(rq.
Names must be unique. If another token was already on the map with the same name,
it is replaced with this one.
.RS
.LP
If a different image file is needed than the default (named the same as the person's name), 
specify it as 
.IB imagename = creaturename
(optionally followed by the 
.B #
notation described above).
.RE
.TP
.I size
The size, in units of grid squares (diameter), of the creature's token. 
You can also use standard size
designations
.B f
(fine),
.B d
(diminutive),
.B t
(tiny),
.B s
(small),
.B m
(medium),
.B l
(large),
.B h
(huge),
.B g
(gargantuan),
.B c
(colossal).
Where it makes a difference, indicate \*(lqtall\*(rq creatures by using
a capital letter and \*(lqwide\*(rq creatures with a lower-case one.
Since the recommended practice is to use the size codes, which means
you would use the same code for both
.I size
and 
.I area
fields, any time you type into the 
.I size
field, that will update 
.I area
at the same time. If a different
.I area
is needed, that can be edited afterward separately.
.TP
.I area
The threat area in the same units as the
.I size
field. This may also be
one of the standard size designator codes as with
.I size
(and this is generally preferred). In that case,
for size categories larger than medium, use upper-case
(tall) letters for size categories of tall creatures,
and lower-case for long creatures.
.TP
.I color
The color of the threat zone to draw around the creature
in combat mode.
.TP
.I reach?
Check this box if the creature has a reach weapon in hand.
'\" <</>>
.LP
Clicking
.B Ok
places the creature(s) on the grid and dismisses the dialog
box, while clicking
.B Apply
places the creature(s) but leaves the dialog up in case you want
to add more creatures to that grid square.
.RE
.TP
.B "Add Monster..."
Just like 
.B "Add Player" 
but adds a monster token.
.TP
.BI "Toggle Death for " name
Flips the creature token between living and dead states.
The mapper will automatically draw an \*(lqX\*(rq across the creature
token in addition to switching to the \*(lqdead\*(rq image (if images
are used).
.TP
.BI "Cycle Reach for " name
Cycles through the extra threat zone for reach weapons. This goes from normal threat
area to reach area and then to extended reach (both adjacent and reach zones together), then
back to normal again.
.TP
.BI "Toggle Spell Area for " name
Defines a spell effect which is described as a radius \*(lqcentered on you\*(rq (or some
creature). After choosing this item, click the left button to define where the radius extends
from the creature's perimeter.  If there was already a spell in effect, this cancels it.
This differs from the spell area tool from the toolbar in that it moves with the creature
and radiates from the creature's entire space rather than coming from a fixed point on the map.
The area is filled in with the current FILL color.
.TP
.BI "Polymorph " name
If alternative images are available for a creature, this selects which is to be displayed.
If the creature has a 
.B SKINSIZE
attribute which indicates the size of each of its polymorphed forms, then this menu will
allow you to choose between the number of forms defined for that creature, and will automatically
adjust the creature size at the same time. Otherwise, the mapper program doesn't know what
alternate forms are available so it will offer you a choice of three different forms, and will
make a best-effort attempt to locate and display the corresponding images. In this case,
you will need to manually adjust the size if needed.
.TP
.BI "Change Size of " name
Alter the size of a creature token.
.TP
.BI "Toggle Condition for " name
Selects a condition from the list of conditions built in to
.B mapper
or defined by the map service for custom game-specific conditions.
If the selected condition is already set for the target creature(s),
then it is removed. Otherwise it is added to the target(s).
.TP
.BI "Tag " name
Add a tag to a creature token to indicate their conditions. The recent tags which were set
are remembered and available in a sub-menu for convenience.
.TP
.BI "Set Elevation of " name
Specify how high above (or below) the obvious reference level a particular creature is.
This puts a tag in the upper right corner of their token in which is shown their elevation 
(as a simple number). The sub-menu triggered by this item allows easy selection of relative
distances, so you can quickly note that a creature moved up by 10 feet, for example.
Any arbitrary elevation may be directly input by selecting
.RB \*(lq (set) \*(rq
and typing the desired elevation into the dialog box that appears. If an absolute number is
input, that will be the new elevation. If the number begins with a 
.B +
or 
.B \-
sign, its value will be added or subtracted to the current elevation instead.
.TP
.B "Set Movement Mode"
Various modes of locomotion are denoted in the elevation tag (q.v.) by using
a different color for each. Use this menu item to select the mode currently
employed by the creature:
.RS
'\" <<desc>>
.TP
.B land
(white text on a black background)
.TP
.B fly
(black text on a deep sky blue background)
.TP
.B climb
(white text on a forest green background)
.TP
.B swim
(white text on a teal background)
.TP
.B burrow
(white text on a sienna background)
.RE
'\" <</>>
.TP
.B "Deselect All"
Cancels the multiple-creature selection.
.TP
.B "Show Visible Objects"
Moves the scrollbars to bring map features into view.
.TP
.B "Sync Others Views"
Moves all the other map clients scrollbars to see what this client is showing.
.TP
.B "Refresh Display"
Redraws the contents of the local mapper client. This does not reload any data (see the
.B Sync
button in the toolbar for that), but just locally re-draws everything again. This is useful,
for example, if the client didn't know about image data for tiles or creature tokens when it
first rendered the display. Often, it will work in the background to discover the missing
image data, so refreshing the display will then render everything properly.
.TP
.I name
Add a player token for the named player to the map, or move it to this location
if it was already on the map.
'\" <</>>
.SS "Creatures"
.LP
With the Move Tool (q.v.) selected, click and drag creatures to move them
around the map. 
'\"As with context menus, creatures larger than medium-size must
'\"be dragged from the upper-left corner of the rectangular space they fill on the board.
.LP
If you hold the control key down while left-clicking on creature tokens, it toggles whether
that creature is included in the group selection. When a group is selected, dragging any member
of the group moves the entire group at once. Context selections will also apply to the entire
group (e.g., to toggle death for all the selected tokens).
.LP
In combat mode, the area threatened by each creature is shown as a dashed outline,
and is cross-hatched when that player's turn is up for action. Arrows are drawn between
creatures in range to be melee targets.
'\" <<TeX>>
'\" \label{manpage:mapper:6:protocol:start}
'\" <</TeX>>
.SH "CONTROL PROTOCOL"
.LP
When connected to a control service (see the
.B \-h
option above), the mapper and remote service exchange
commands to indicate changes to the map display.  
To help keep communications simple and to help clients
recover from malformed or missing data, each
command is a newline-terminated line of text
as described in detail below.  If the mapper sends one of these
commands to the service, it is indicating that the local
user made those changes and requests that other connected
map clients update themselves accordingly.  If the mapper receives
the command from the service, it should comply to make the
corresponding change to itself.
.LP
The software 
.B MUST 
allow Unicode text encoded as UTF-8
everywhere (of which 7-bit ASCII is a subset).
.LP
Each command (sent or received) consists of a command word
followed by a JSON object holding the parameters appropriate to
that command. (See the description of the 
.B //
command for an exception to this rule.)
.LP
The JSON object may be omitted (particularly if
the command in question has no parameters). Any expected parameter fields
which do not appear in the JSON object are automatically assumed to have
an appropriate \*(lqzero\*(rq value (i.e., empty string, zero numeric
value, empty list, boolean false, etc.). Any fields which are not expected are silently
ignored.
.LP
JSON field names are matched case-sensitively. A client 
.B MAY 
match names
regardless of case but 
.B MUST 
emit them as documented here.
.LP
Field values are strings unless otherwise noted.
.LP
Unless otherwise noted, there is no response expected from
these commands. Even where a response is expected, it will be
asynchronously sent. In any case the client 
.B "SHOULD NOT"
wait for a server
response before considering its request to be completed. As a special
case, a client 
.B MAY 
be implemented to wait synchronously for a server
response during the authentication negotiation stage.
.LP
This describes protocol version 402. These notes are intended to be 
detailed enough to implement a client from and should be considered
the definitive standard reference to the protocol.
.LP
In the protocol command descriptions,
'\" <<TeX>>
'\" {\ttfamily fixed-width}
.B BOLD
'\" <</TeX>>
text indicates literal text to be sent as-is,
.I Italics
indicate a parameter whose value should appear in place of the name shown, and
[square brackets]
surround optional items which may be omitted.
.LP
The normal course of actions at the start of the conversation is for the server to immediately send an initial
greeting beginning with a
.B PROTOCOL
command followed by comments, 
.BR AC , 
.BR DSM , 
.BR UPDATES ,
and/or
.BR WORLD 
commands, then send an 
.B OK
command to indicate to the client its protocol version and to issue an
authentication challenge (if configured to authenticate). It is 
.B RECOMMENDED
that the initial greeting be limited only to comments, waiting until after authentication
to send anything more specific about your game.
.LP
After the
.B OK
command, the client responds with an
.B AUTH
command if it is required to authenticate. The server will respond with
.B GRANTED
or
.B DENIED
and then 
.B MAY 
issue more of the initial greeting commands listed above.
.LP
Finally, the server will issue a
.B READY
command to the client and begin normal interaction with the client.
.LP
The server 
.B "MUST NOT"
send the
.BR AC ,
.BR DENIED ,
.BR GRANTED ,
.BR OK ,
.BR READY ,
.BR UPDATES ,
or
.BR WORLD
commands after the initial
.B READY
is sent.
Clients MUST NOT send the
.BR AUTH 
command after receiving the server's
.B READY
signal.
.SS "Command Summary"
.LP
The messages sent by clients and servers is summarized in the following table
and then explained in detail in the following paragraphs.
In the table, Message is the standard message name recommended for identifier names
in source code, Command is the string actually sent over the network, C\[<>]S indicates
whether the message is only sent from client to server, only from server to client, or
if it could be sent in either direction. Priv indicates if the command may only be
sent by a client authenticated as the GM.
Note that Reply indicates the command which
.B SHOULD
(eventually) arrive in response, but no guarantee is made as to if or when that happens
since all communications are asynchronous.
.LP
.TS
center;
lB lB cB lB lB lB lB
l lfC c lfC c c l.
Message	Command	C\[<>]S	Reply	Priv	Payload	Description
Accept	ACCEPT	C\[->]S	\fR\(em\fP	no	JSON	Subscribe to a set of messages
AddCharacter	AC	C\[<-]S	\fR\(em\fP	N/A	JSON	Add primary PC to party
AddDicePresets	DD+	C\[->]S	DD=	no	JSON	Add presets to user's set
AddImage	AI	C\[<>]S	\fR\(em\fP	no	JSON	Add image to client's known set
AddObjAttributes	OA+	C\[<>]S	\fR\(em\fP	no	JSON	Add values to an attribute
AdjustView	AV	C\[<>]S	\fR\(em\fP	no	JSON	Scroll clients' views
Allow	ALLOW	C\[->]S	\fR\(em\fP	no	JSON	Indicate supported features
Auth	AUTH	C\[->]S	GRANTED	no	JSON	Authenticate to server
Challenge	OK	C\[<-]S	AUTH	N/A	JSON	Ask client to authenticate
ChatMessage	TO	C\[<>]S	\fR\(em\fP	no	JSON	Send chat message
Clear	CLR	C\[<>]S	\fR\(em\fP	no	JSON	Remove objects from client
ClearChat	CC	C\[<>]S	\fR\(em\fP	no	JSON	Clear the chat history
ClearFrom	CLR@	C\[<>]S	\fR\(em\fP	no	JSON	Remove elements from a map file
CombatMode	CO	C\[<>]S	\fR\(em\fP	yes	JSON	Turn on/off combat mode
Comment	//	C\[<-]S	\fR\(em\fP	no	any	Human-readable comment
DefineDicePresets	DD	C\[->]S	DD=	no	JSON	Store new presets for user
Denied	DENIED	C\[<-]S	\fR\(em\fP	N/A	JSON	Server denies access
FilterDicePresets	DD/	C\[->]S	DD=	no	JSON	Remove some presets for user
Granted	GRANTED	C\[<-]S	\fR\(em\fP	N/A	JSON	Server grants access
LoadArcObject	LS-ARC	C\[<>]S	\fR\(em\fP	no	JSON	Add an arc to the map
LoadCircleObject	LS-CIRC	C\[<>]S	\fR\(em\fP	no	JSON	Add an ellipse to the map
LoadFrom	L	C\[<>]S	\fR\(em\fP	no	JSON	Load elements from file
LoadLineObject	LS-LINE	C\[<>]S	\fR\(em\fP	no	JSON	Add a line to the map
LoadPolygonObject	LS-POLY	C\[<>]S	\fR\(em\fP	no	JSON	Add a polygon to the map
LoadRectangleObject	LS-RECT	C\[<>]S	\fR\(em\fP	no	JSON	Add a rectangle to the map
LoadSpellArea\fR-\fP	LS-SAOE	C\[<>]S	\fR\(em\fP	no	JSON	Add an area of effect to the map
\ OfEffectObject	\^	\^	\^	\^	\^	\^
LoadTextObject	LS-TEXT	C\[<>]S	\fR\(em\fP	no	JSON	Add some text to the map
LoadTileObject	LS-TILE	C\[<>]S	\fR\(em\fP	no	JSON	Add a graphic tile to the map
Marco	MARCO	C\[<-]S	POLO	N/A	none	Check if client is alive
Mark	MARK	C\[<>]S	\fR\(em\fP	no	JSON	Visually mark a spot
PlaceSomeone	PS	C\[<>]S	\fR\(em\fP	no	JSON	Place creature token
Polo	POLO	C\[->]S	\fR\(em\fP	no	none	Acknowledge server's ping
Priv	PRIV	C\[<-]S	\fR\(em\fP	N/A	JSON	Priveleged command denied
Protocol	PROTOCOL	C\[<-]S	\fR\(em\fP	N/A	int	Signal protocol version in use
QueryDicePresets	DR	C\[->]S	DD=	no	none	Request user's presets
QueryImage	AI?	C\[<>]S	AI	no	JSON	Ask for definition of image
QueryPeers	/CONN	C\[->]S	CONN	no	none	Request list of peer clients
Ready	READY	C\[<-]S	\fR\(em\fP	N/A	none	Server sign-on complete
RemoveObjAttributes	OA-	C\[<>]S	\fR\(em\fP	no	JSON	Remove values from an attribute
RollDice	D	C\[->]S	ROLL	no	JSON	Initiate a die roll
RollResult	ROLL	C\[<-]S	\fR\(em\fP	N/A	JSON	Result of a die roll
Sync	SYNC	C\[->]S	\fRany\fP	no	none	Request replay of commands
SyncChat	SYNC-CHAT	C\[->]S	CC	no	JSON	Request replay of messages
\^	\^	\^	ROLL	\^	\^	\^
\^	\^	\^	TO	\^	\^	\^
Toolbar	TB	C\[<>]S	\fR\(em\fP	yes	JSON	Turn on/off client toolbar
UpdateClock	CS	C\[<>]S	\fR\(em\fP	yes	JSON	Change the current time of day
UpdateDicePresets	DD=	C\[<-]S	\fR\(em\fP	N/A	JSON	Receive user's presets
UpdateInitiative	IL	C\[<>]S	\fR\(em\fP	yes	JSON	Update the initiative list
UpdateObjAttributes	OA	C\[<>]S	\fR\(em\fP	no	JSON	Update object attributes
UpdatePeerList	CONN	C\[<-]S	\fR\(em\fP	N/A	JSON	Notify of all connected peers
UpdateProgress	PROGRESS	C\[<>]S	\fR\(em\fP	no	JSON	Indicate progress on task
UpdateStatusMarker	DSM	C\[<>]S	\fR\(em\fP	yes	JSON	Define creature status marker
UpdateTurn	I	C\[<>]S	\fR\(em\fP	yes	JSON	Indicate turn in combat
UpdateVersions	UPDATES	C\[<-]S	\fR\(em\fP	N/A	JSON	Advertise software updates
World	WORLD	C\[<-]S	\fR\(em\fP	N/A	JSON	Campaign world info
.TE
.SS "Command Details"
.LP
The client/server messages and their parameters are detailed below, ordered by the server
command string sent or received.
'\" <<list>>
.TP 12
.B //
This is a server comment.  The entire command should be ignored by all clients. This is used
to inject informative context and messages into the client/server conversation which may be
of interest for debugging or interactive use.
.RS
.LP
.I "This is one of two exceptions to the rule that a command contains a JSON parameter"
.I "object. In this case, the"
entire
.I "line should be ignored by the client and not interpreted further."
This allows, for example, comments to be sent at the start of the server's
signon message to provide a human-readable declaration as to the allowed
usage of the server.
.RE
.TP
.BI "PROTOCOL " v
This command, which, if used at all, MUST be the first command sent by the server
to the client, gives an up-front indication to the client as to what protocol
version is expected by the server. Older versions of the server waited until
the
.B OK
command to notify the client, but as of protocol version 400 this is now too late
for the client to correctly process the commands that may be sent before the
.BR OK .
This, along with the 
.B //
server comment command, are the only two commands which do
.I not
have a JSON data payload attached to them. The protocol version number is
simply sent as an ASCII string of digits separated from the 
.B PROTOCOL
command word by a space.
.RS
.LP
Servers which implement protocol versions 400 and later MUST send this message
at the start of their conversations. Servers which implement older protocol versions
SHOULD send it.
.RE
.TP
.B AC
Add a character to the pop-up menu for map clients. This makes it easy to place important character tokens
on the map and ensures that such tokens are given consistent
.I id
values rather than generating a random one.
Clients MUST NOT send this command to each other; it is intended for the server to send to the clients.
The payload includes the same fields as the
.B PS
command.
.TP
.B ACCEPT
A client sends this message to the server to indicate that from this point
forward (until another
.B ACCEPT
command), only the commands listed
should be sent to it by the server. 
The payload is a JSON object with this parameter:
'\" <<desc>>
.RS
.TP 
.BI Messages " (list)"
A list of command names the client wishes to receive.
This is a list of command names as they
appear in this specification (e.g.,
.BR "[\[dq]AI\[dq],\[dq]CO\[dq],\[dq]TO\[dq]]" ).
If it contains the special value
.RB \*(lq * \*(rq
or is empty, this means to accept all messages. Note that the server may still
decide to send messages such as comments or the 
.B MARCO
command (or others) at its discretion despite this request from the client.
.RE
'\" <</>>
.TP
.B AI
Add an image to the map.
(Supersedes the function of the
.BR AI ,
.BR AI: ,
.BR AI. ,
and
.BR AI@
commands as of protocol version 400.)
The payload is a JSON object with the following fields:
'\" <<desc>>
.RS
.TP
.B Name
The name of the image as known within the mapper.
.TP
.BI Sizes " (list of objects)"
A list of sizes available for this object. This will be
.I merged
with any previously defined sizes for the same image name.
Each element of this list is an object with the following fields:
'\" <<desc>>
.RS
.TP
.B File
The filename or server ID by which the image can be retrieved.
.TP
.BI ImageData " (base64-encoded bytes)"
If non-empty or not
.BR null ,
this provides the raw image data. This is DEPRECATED but still supported.
Instead, images SHOULD be loaded to the game server and their ServerID used
by clients.
.TP
.BI IsLocalFile " (bool)"
If
.BR true ,
then
.I file
gives a local file pathname for the image; otherwise it gives the
server-specific ID which the client will use to retrieve the file
from the server.
.TP
.BI Zoom " (float)"
The magnification level this bitmap represents for the given
image. Typically images are provided for
.I zoom
levels of 0.25, 0.5, 1, 2, and 4.
'\" <</>>
.RE
'\" <</>>
.LP
This does not
'\" <</ital-is-var>>
.I draw
'\" <<ital-is-var>>
the image on the map; it merely defines it so the client knows what to draw when an image of
the given
.I name
at the specified
.I zoom
factor is called for.
.LP
Note on clients retrieving images by server ID when
.I IsLocalFile
is
.B false
and
.I File
contains a server-side ID:
as currently implemented, the 
.B mapper
client checks to see if it has a cached version of the file. If so, and that
file is newer than 2 days, it is used without further checks. If the cached file
is older, the server is queried to see if it has a newer version of the file; if so,
that is retrieved and cached; otherwise, the existing cache is updated to note that
it was the known latest version as of that moment. If no usable cache file is available,
the file with the given
id
is obtained from the server. For example, if the image
id
were
.RB \*(lq abcdefg \*(rq,
the URL of the file to be retrieved would be
.IB base /a/ab/abcdefg.gif
where
.I base
is the base URL as specified to the 
.BI \-\-curl\-url\-base= base
option (or 
.BI curl\-url\-base= base
configuration file line).
.LP
Servers SHOULD be set up to provide alternative file formats so that, for example,
with ID
.B abcdefg
files such as 
.B a/ab/abcdefg.jpg
or
.B a/ab/abcdefg.png
may be retrieved for clients which use those other formats. 
Due to implementation limitations of the framework used, 
.B mapper.tcl
always uses GIF format files.
.RE
.TP
.B AI?
Request for the named image.
Clients may send this if they need an image of the given
.I name
and 
.I zoom
(as described above for the
.B AI
command) but no such image is defined yet in the client. This
queries the server or connected peers to see if any of them know
of the needed image. The client should continue to process tasks without
waiting for a response (which is never guaranteed). If another peer knows
of the requested image, it should respond with an
.RB \*(lq AI \*(rq
command.
The payload is a JSON object with the following fields:
'\" <<desc>>
.RS
.TP
.BI Name
The image name as known to the mapper.
.TP
.BI Sizes " (list of objects)"
The list of sizes for which the image data are requested.
Each element of the list is an object with the following field:
'\" <<desc>>
.RS
.TP
.BI Zoom " (float)"
The requested magnification factor for the image.
.RE
.\" <</>>
.RE
.\" <</>>
.TP
.B ALLOW
The client MAY send this command to the server after logging in. This tells
the server that the client supports one or more optional features. The
JSON payload has the following field:
.RS
.TP
.BI Features " (list of strings)"
This is a list of feature names which the client wishes to enable.
Every time an
.B ALLOW
command is given, it resets the entire set of features, rather than 
adding to them.
Currently, only one feature is recognized:
.RS
.TP
.B DICE-COLOR-BOXES
The client supports formatting controls in the die-roll title string sent
to the server in the
.B D
command and received from the server via the
.B ROLL
command. Specifically, the title may consist of multiple sub-titles
separated by U+2016 characters (||). Each of these may also have a suffix
consisting of the U+2261 (\[==]) character followed by a color name or
.BI # rrggbb
color code, indicating the foreground color for that part of the title. A second
such suffix may be added to indicate the background color. If this feature is
not enabled, these formatting codes are stripped out by the server before sending
die roll results to a client which isn't prepared to interpret them.
.RE
.RE
.TP
.B AUTH
If the server included a challenge string (see the
.B OK
command below), then it requires a password before the client is allowed to
join the server. This is intended to prevent accidental connections by clients
to the wrong servers, and to filter out nuisance connections from spammers or
other random connections, so it is a fairly simple authentication mechanism
using a password shared by all clients in a play group.
The payload is a JSON object with the following parameters:
'\" <<desc>>
.RS
.TP
.B Client
This describes the client program. By convention, this value
SHOULD include the version number (e.g., \*(lqmapper 4.0.1\*(rq).
.TP
.BI Response " (base64-encoded bytes)"
The client's response to the server's challenge.
.TP
.B User
If provided, the
.I user
parameter gives the local username of the player who is
running the client. This name will be displayed for purposes
such as chat-window conversations and dice rolling. If not
provided, \*(lqanonymous\*(rq will be used, unless the authentication
is successful for the GM role, in which case \*(lqGM\*(rq will be
used regardless of any value sent by the client for the
.I user
field.
'\" <</>>
.LP
Calculation of the 
.I response
field is as follows.
.LP
Given:
'\" <<TeX>>
'\" \begin{align*}
'\"  C & \text{ is the server's challenge as a binary string of bytes }\\
'\"    & \text{ (after decoding from the base-64 string sent by the server),} \\
'\"  H(x) & \text{ is the binary SHA-256 hash digest of \(x\),} \\
'\"  P & \text{ is the password needed to connect to the server, and the notation} \\
'\"  x || y& \text{ means to concatenate the strings \(x\) and \(y\),}
'\" \end{align*}
'\" then the procedure to calculate the \Var*{response} string is:
'\" \begin{enumerate}
'\"  \item Obtain $i$ by extracting the first two bytes from \Var*{C} as an unsigned, big-endian,
'\" 16-bit integer value.
'\"  \item Calculate $D=H(C||P)$.
'\"  \item Repeat $i$ times:
'\"  \begin{enumerate}
'\"   \item Calculate $D'=H(P||D)$.
'\"   \item Let $D=D'$.
'\"  \end{enumerate}
'\" \end{enumerate}
.\" <<desc>>
.TP 5
.I C
is the server's challenge as a binary string of bytes (after decoding from the base-64 string actually sent by the server),
.TP
.RI H( x )
is the binary SHA-256 hash digest of 
.IR x ,
.TP
.I P
is the password needed to connect to the server, and the notation
.TP
.IR x || y
means to concatenate strings
.I x
and 
.IR y ,
.\" <</>>
.LP
To calculate the
.I response
string, the client must do the following:
.\" <<enum>>
.TP 4
(1)
Obtain
.I i
by extracting the first two bytes from
.I C
as an unsigned, big-endian, 16-bit integer value.
.TP
(2)
Calculate 
.IR D =H( C || P ).
.TP
(3)
Repeat 
.I i
times: Calculate 
.IR D '=H( P || D "); then let " D = D '
.\" <</>>
'\" <</TeX>>
.LP
The binary value of 
.I D
is then encoded using base-64 and sent as the
.I response
value.
.LP
Starting with protocol version 332, the server is guaranteed to
respond to the
.B AUTH
command with either a 
.B DENIED
or
.B GRANTED
message (q.v.). The client MAY wait for this response before proceeding
with its other operations, so that it knows for sure how the authentication
went.
.RE
.TP
.B AV
Adjust the map's viewport by making the grid square identified by the
.B Grid
parameter visible at the top-left of the display. If this field is not
present or is empty, then clients MAY fall back to the older behavior of
adjusting the
view by setting the horizontal scrollbar to 
.I xview
as a fraction of its full distance, where 0.0 is all the way to the left and
1.0 is all the way to the right; the vertical scrollbar is similarly set based on
.I yview
where 0.0 is all the way to the top and 1.0 is all the way to the bottom.
The payload is a JSON object with the following fields:
'\" <<desc>>
.RS
.TP
.B Grid
The name of the grid square which should be in the upper-left of the display.
This uses the same naming convention as the grid is labelled on the display
(e.g., the far upper-left grid square of the entire map is
.BR A0 ).
.TP
.BI XView " (float)"
The fraction of full distance the
.IR x -axis
scrollbar should be moved to.
.TP
.BI YView " (float)"
As
.IR xview ,
but for the 
.I y
axis.
.RE
'\" <</>>
.TP
.B CC
Clear the chat history. The payload is a JSON object with the following fields:
'\" <<desc>>
.RS
.TP
.BI RequestedBy
The name of the user who initiated this operation, if known. 
Clients SHOULD NOT set this field; it is set by the server when sending this
message to clients.
.TP
.BI DoSilently " (bool)"
If true, the client MAY clear its chat history without notifying the user;
otherwise it SHOULD indicate the action to the user.
.TP
.BI Target " (int)"
If 0 or missing, clear all messages in the history. Otherwise, if positive, clear all
messages with 
.I messageID
less than the
.I target
value. If negative, clear all but the most recent
.RI \- target
messages (e.g., a
.I target
of \-50 clears all but the most recent 50 messages).
.TP
.BI MessageID " (int)"
This message counts the same as a chat message and is included in the history
itself. Thus, the server sets this field to a unique identifier for this
message. Clients SHOULD NOT set this field.
.RE
'\" <</>>
.TP
.B CLR
Remove object with a given internal ID from the map. The payload is a JSON
object with the following field:
'\" <<desc>>
.RS
.TP
.BI ObjID
This may be the object ID for the specific object to remove, or
\*(lq*\(rq to mean all objects should be removed;
\*(lqE*\(rq to mean all map elements should be removed;
\*(lqM*\(rq to mean all monster tokens should be removed;
\*(lqP*\(rq to mean all player tokens should be removed;
or it may be a creature name (in the form
.RI \*(lq[ imagename =] name \*(rq)
which removes a creature token whose display name matches the
.I objID
value.
.RE
'\" <</>>
.TP
.B CLR@
This command tells the client to \*(lqunload\*(rq the contents of a map
file. In other words, all the elements listed in that file are removed from
the map canvas rather than being added to it. The payload is a JSON object
with the following fields:
'\" <<desc>>
.RS
.TP
.B File
The pathname or server ID which specifies the map file in question.
.TP
.BI IsLocalFile " (bool)"
If true, 
.I file
refers to a local file the client can read directly. Otherwise it is
a server ID which can be used to fetch the file from its cache or from
the server.
.RE
'\" <</>>
.TP
.B CO
Sets the combat mode state in the client.  The payload is a JSON object
with the following attribute:
'\" <<desc>>
.RS
.TP
.BI Enabled " (bool)"
If true, the client should be in combat (initiative) mode, otherwise it should not.
.RE
'\" <</>>
.TP
.B CONN
Update the list of connected peer clients to those described in the JSON
payload, which contains the following field.
Clients MUST NOT send this command. This supersedes the
.BR CONN ,
.BR CONN: ,
and 
.BR CONN.
commands from protocol versions prior to 400.
'\" <<desc>>
.RS
.TP
.BI PeerList " (list of objects)"
A list of objects, each describing a single connected client, with the following
fields:
'\" <<desc>>
.RS
.TP
.BI Addr
The IP address and port the peer connected from.
.TP
.BI User
The username as provided during authentication.
.TP
.BI Client
The name of the client program in use.
.TP
.BI LastPolo " (float)"
The number of seconds since the server last heard a 
.B POLO
command from the peer.
.TP
.BI IsAuthenticated " (bool)"
If true, the client successfully negotiated the server's authentication process.
.TP
.BI IsMe " (bool)"
If true, this object describes the client which received this command.
'\" <</>>
.RE
'\" <</>>
.RE
.TP
.B CS
Update the client's clock.
The JSON payload includes the following fields:
'\" <<desc>>
.RS
.TP
.BI Absolute " (int64)"
The absolute time on the GMA world clock (in tenths of seconds since the epoch).
.TP
.BI Relative " (int64)"
The elapsed time on the GMA world clock (in tenths of seconds since the GM set a
reference point, e.g., the start of combat).
.TP
.BI Running " (bool)"
If true, the local client should continue advancing the clock in real-time locally after updating the time to the new absolute time.
Otherwise, cancel real-time updates if they were running, leaving the clock at the given absolute time. The local real-time updating
events should only be performed when not in combat mode.
'\" <</>>
.RE
.TP
.B D
Roll dice using the server's built-in die rolling facility.
The JSON payload contains the following fields:
'\" <<desc>>
.RS
.TP
.BI Recipients " (list of strings)"
The names of the people who should receive the results
of the die roll. For global or GM results, this should be 
.BR null .
.TP
.B RequestID
If you put a string value in this field, it will be sent back in any
.B ROLL
response messages the server sends to you in response to this request. This
allows a client to associate responses to the requests that generated them.
You may leave this blank or omit it if you don't care to match requests with
responses.
.TP
.BI ToAll " (bool)"
If true, this is a global die-roll, and the result should be
sent to all clients.
.TP
.BI ToGM " (bool)"
If true, this die-roll will be sent \*(lqblind\*(rq to the GM only.
Not even the requester will see the result of the roll, only the GM will.
.TP
.BI RollSpec
The die-roll specification, like \*(lqd20+12\*(rq or \*(lq6d6 fire\*(rq.
If this field is empty, the previous die-roll from this client is repeated,
or \*(lq1d20\*(rq if there was no previous one.
'\" <</>>
.RE
.TP
.B DD
Store Die-Roll Presets.
Clients send this command to the server to request it to store a set of
die-roll presets for it to retrieve for use in subsequent sessions.
The JSON payload is identical to the one sent by the server in the
.B DD=
command, with the addition of the following optional field:
.RS
.TP
.B For
The name of the user whose presets are being affected. This is optional;
if omitted, the presets of the user making this request are affected. Only
the GM may change other users' presets.
.LP
The server SHOULD respond by issuing a
.B DD=
command to all peer clients logged in with the same username as the
affected user. 
.RE
.TP
.B DD+
Add to Die-Roll Presets.
Clients send this command to the server to add an additional set of die-roll
presets to the collection it was already holding for that user. The JSON
payload is identical to the one sent for the 
.B DD
command.
The server SHOULD respond by issuing a
.B DD=
command to all peer clients logged in with the same username as the
requesting client. 
.TP
.B DD/
Filter die-roll presets. This removes a set of die-roll presets
from the server's storage for the user.
The server SHOULD respond by issuing a
.B DD=
command to all peer clients logged in with the same username as the
affected user. 
The JSON payload includes the following field:
'\" <<desc>>
.RS
.TP
.B Filter
The value is a regular expression. The server will delete all die-roll
presets whose
.I name
attribute matches this regular expression.
.TP
.B For
The name of the user whose presets are being filtered. This is optional;
if omitted, the presets of the user making this request are affected. Only
the GM may filter other users' presets.
'\" <</>>
.RE
.TP
.B DD=
This command defines the list of die-roll presets the client should know.
This replaces any previous set of presets the client was using.
Clients MUST NOT send this command. This supersedes the commands
.BR DD= ,
.BR DD: ,
and 
.BR DD.\&
in protocol versions prior to 400.
The JSON payload includes the following fields:
'\" <<desc>>
.RS
.TP
.BI Presets " (list of objects)"
Each element in this list describes a single preset. It has the following
fields:
'\" <<desc>>
.RS
.TP
.BI Name
The name by which this preset is identified to the user. This MUST
be unique for that user.  The client SHOULD sort the preset list by 
the 
.I name
field before displaying. If a vertical bar (\*(lq|\*(rq) appears in the
.IR name ,
all text up to and including the bar SHOULD be suppressed from display.
.TP
.BI Description
A text description of the purpose of the preset.
.TP
.BI DieRollSpec
The die-roll specification to send to the server when rolling this preset.
'\" <</>>
.RE
'\" <</>>
.RE
.TP
.B DENIED
Access to the server is denied. The server will send this to a client; clients
MAY NOT send it.
The JSON payload sent with this command includes the field:
'\" <<desc>>
.RS
.TP
.B Reason
Text description of why the access was refused.
'\" <</>>
.RE
.TP
.B DR
Retrieve the authenticated user's die roll presets. This SHOULD
result in the server sending the
.B DD=
command back to the requesting client. 
.TP
.B DSM
Defines (or re-defines) a condition status marker which the client SHOULD
use to mark creature tokens when the creature has the associated condition in
effect. The JSON payload includes the following fields:
'\" <<desc>>
.RS
.TP
.B Condition
The name of the condition being described.
If there was already a marker defined for that condition, it is replaced with the new
definition. If either 
.I shape
or
.I color
is the empty string or
.BR null ,
then the condition is effectively removed from the list of conditions
known to the mapper. Creature conditions are in effect if their name appears in the list value
for that creature's 
.B STATUSLIST
attribute.
The mapper comes with the following conditions pre-defined:
.BR "ability drained" ,
.BR bleed ,
.BR blinded ,
.BR confused ,
.BR cowering ,
.BR dazed ,
.BR dazzled ,
.BR deafened ,
.BR disabled ,
.BR dying ,
.BR "energy drained" ,
.BR entangled ,
.BR exhausted ,
.BR fascinated ,
.BR fatigued ,
.BR flat-footed ,
.BR frightened ,
.BR grappled ,
.BR helpless ,
.BR incorporeal ,
.BR invisible ,
.BR nauseated ,
.BR panicked ,
.BR paralyzed ,
.BR petrified ,
.BR pinned ,
.BR poisoned ,
.BR prone ,
.BR shaken ,
.BR sickened ,
.BR stable ,
.BR staggered ,
.BR stunned ,
and
.BR unconscious .
.TP
.B Shape
The shape of the marker to be placed if the creature has this condition.
The mapper will attempt to arrange multiple markers with the same shape such
that they are all visible at the same time. This value may be one of the 
'\" <<TeX>>
'\"symbols shown in Table~\ref{tbl:manpages:mapper:6:conditions}.
'\"\begin{table}
'\" \begin{center}
'\"  \begin{tabular}{lp{4in}}\toprule
'\"   \bfseries Symbol & \bfseries Description of Indicator \\\midrule
'\"    \z{|v} & A small downward-pointing triangle against the middle of the left edge of the token.
'\"             (This is a lower-case ``\z{v}''.)\\
'\"    \z{v|} & A small downward-pointing triangle against the middle of the right edge of the token.
'\" (This is a lower-case ``\z{v}''.)\\
'\"    \z{|o} & A small circle against the middle of the left edge of the token.
'\" (This is a lower-case ``\z{o}''.)\\
'\" \z{o|} & A small circle against the middle of the right edge of the token.
'\" (This is a lower-case ``\z{o}''.)\\
'\" \z{|<>} & A small diamond against the middle of the left edge of the token.\\
'\" \z{<>|} & A small diamond against the middle of the right edge of the token.\\
'\" \z{/} & A slash (upper right to lower left) through the entire token.\\
'\" \z{\textbackslash} & A back-slash (upper left to lower right) through the entire token.\\
'\" \z{//} & A double slash (upper right to lower left) through the entire token.\\
'\" \z{\textbackslash\textbackslash} & A double back-slash (upper left to lower right) through the entire token.\\
'\" \z{-} & A single horizontal line drawn through the center of the entire token.\\
'\" \z{=} & A double horizontal line drawn through the center of the entire token.\\
'\" \z{|} & A single vertical line drawn through the center of the entire token.\\
'\" \z{||} & A double vertical line drawn through the center of the entire token.\\
'\" \z{+} & A cross drawn through the entire token.\\
'\" \z{\#} & A hash-mark drawn through the entire token.\\
'\" \z{V} & A large downward triangle drawn around the entire token.  (This is an upper-case letter ``\z{V}''.)\\
'\" \z{\textasciicircum} & A large upward triangle drawn around the entire token.\\
'\" \z{<>} & A large diamond drawn around the entire token.\\
'\" \z{O} & A large circle drawn around the entire token. (This is an upper-case letter ``\z{O}''.)\\
'\" \bottomrule
'\" \end{tabular}
'\" \caption{Condition Marker Symbols\label{tbl:manpages:mapper:6:conditions}}
'\" \end{center}
'\"\end{table}
following:
.RS
.\" <<desc>>
.TP
.B |v
A small downward-pointing triangle against the middle of the left edge of the token.
(This is a lower-case \*(lqv\*(rq.)
.TP
.B v|
A small downward-pointing triangle against the middle of the right edge of the token.
(This is a lower-case \*(lqv\*(rq.)
.TP
.B |o
A small circle against the middle of the left edge of the token.
(This is a lower-case \*(lqo\*(rq.)
.TP
.B o|
A small circle against the middle of the right edge of the token.
(This is a lower-case \*(lqo\*(rq.)
.TP
.B |<>
A small diamond against the middle of the left edge of the token.
.TP
.B <>|
A small diamond against the middle of the right edge of the token.
.TP
.B /
A slash (upper right to lower left) through the entire token.
.TP
.B \e
A back-slash (upper left to lower right) through the entire token.
.TP
.B //
A double slash (upper right to lower left) through the entire token.
.TP
.B "\e\e"
A double back-slash (upper left to lower right) through the entire token.
.TP
.B \-
A single horizontal line drawn through the center of the entire token.
.TP
.B =
A double horizontal line drawn through the center of the entire token.
.TP
.B |
A single vertical line drawn through the center of the entire token.
.TP
.B ||
A double vertical line drawn through the center of the entire token.
.TP
.B +
A cross drawn through the entire token.
.TP
.B #
A hash-mark drawn through the entire token.
.TP
.B V
A large downward triangle drawn around the entire token.
(This is an upper-case letter \*(lqV\*(rq.)
.TP
.B ^
A large upward triangle drawn around the entire token.
.TP
.B <>
A large diamond drawn around the entire token.
.TP
.B O
A large circle drawn around the entire token.
(This is an upper-case letter \*(lqO\*(rq.)
.RE
.\" <</>>
'\" <</TeX>>
.TP
.B Color
The color to draw the marker in any of the forms documented
above, or the special value
.RB \*(lq * \*(rq,
which means to draw the marker in the same color as the creature's
threatened area.
.RS
.LP
If 
.I color
begins with 
.RB \*(lq \-\- \*(rq
(e.g., \*(lq\-\-red\*(rq),
then the marker is drawn with dashed lines instead of solid ones.
If it begins with
.RB \*(lq .. \*(rq
(e.g., \*(lq..blue\*(rq),
then the effect is the same, but the dashes are shorter.
.RE
.TP
.B Description
A description of the effects on the character of having that condition
applied. This is intended to be shown to players (for example,
if they hover their mouse over an affected creature token).
'\" <</>>
.RE
.TP
.B ECHO
Ask that the server send this message back to you. This may be used
for synchronization since it indicates to the client when the server
got to this request amongst the others it received. The following
fields may be populated:
.RS
.TP 10
.B s
An arbitrary string value.
.TP
.BI "i " (int)
An arbitrary integer value.
.TP
.BI "b " (bool)
An arbitrary boolean value.
.TP
.BI "o " (object)
An arbitrary set of key/value pairs, with each value having any type.
.RE
.TP
.B GRANTED
Access to the server is granted. The server will send this to a client; no client should send it. The JSON payload contains the field:
'\" <<desc>>
.RS
.TP
.B User
The user name for this client. This is the name provided by the client,
\*(lqanonymous\*(rq if the client didn't give one, or \*(lqGM\*(rq if the
client authenticated as the GM.
'\" <</>>
.RE
.TP
.B I
Update the time clock for initiative-based actions.  If the mapper
is in combat mode, the clock display is updated accordingly.
The JSON object payload includes the following fields:
'\" <<desc>>
.RS
.TP
.B ActorID
The object identifier of the creature whose turn it is. This may
be the unique object ID code, the creature name as documented in the
.B AC
command, the special string
.RB \*(lq*Monsters*\*(rq
which indicates that all creatures with monster-type tokens have
initiative, or may be of the form
.BI \fR\*(lq\fP/ regex\fR\*(rq,\fP
which matches all creatures whose names match the regular expression
.IR regex .
.TP
.BI Hours " (int)"
The number of hours elapsed since the start of combat.
.TP
.BI Minutes " (int)"
The number of minutes elapsed since the start of this hour of combat.
.TP
.BI Seconds " (int)"
The number of seconds elapsed since the start of this minute of combat.
.TP
.BI Rounds " (int)"
The number of rounds elapsed since the start of combat.
.TP
.BI Count " (int)"
The number of initiative slots elapsed since the start of the round.
'\" <</>>
.RE
.TP
.B IL
Update the initiative list.
The JSON payload includes the following field:
'\" <<desc>>
.RS
.TP
.BI InitiativeList " (list of objects)"
The current initiative list is given as a list of initiative slots, each of which
is an object with the following fields:
'\" <<desc>>
.RS
.TP
.BI Slot " (int)"
The slot number. As currently implemented this is a number in the range [0,59] which
gives the \*(lqcount\*(rq (1/10th second) in the round where this creature may act.
.TP
.BI CurrentHP " (int)"
The creature's current hit point total.
.TP
.BI Name
The creature's name as displayed on the map.
.TP
.BI IsHolding " (bool)"
If true, the creature is holding their action.
.TP
.BI HasReadiedAction " (bool)"
If true, the creature is holding a readied action.
.TP
.BI IsFlatFooted " (bool)"
If true, the creature is flat-footed.
'\" <</>>
.RE
'\" <</>>
.RE
.TP
.B L
Loads map elements into the map client, either replacing or adding to the
current contents of the map. Supersedes the function of commands
.BR L ,
.BR M ,
.BR M? ,
and
.B M@
in protocol versions prior to 400.
The payload is a JSON object with the following fields:
'\" <<desc>>
.RS
.TP
.B File
The local pathname or server ID identifying the map file to be loaded.
.TP
.BI IsLocalFile " (bool)"
If true, 
.I file
refers to a local filename; otherwise it is a server ID.
.TP
.BI CacheOnly " (bool)"
If true, the server is only advising the client that it would be good to have
a cached copy of
.I file
on hand for later. The client MUST NOT actually load the file's contents to the
displayed map at this time.
.TP
.BI Merge " (bool)"
If true, the map elements in
.I file
are merged with the map's current contents. Otherwise the map's current
elements are replaced by the new ones in
.IR file .
.RE
'\" <</>>
.TP
.BI LS- type
This set of commands
load a single map element into the map.
As opposed to the
.B L
command which directs the client to read a file to get one or more objects,
this just sends an object directly to it. This may be used, for example, when
one client draws an element interactively and wants the other clients to display
it as well.
.RS
.LP
These supersede the function of the commands
.BR LS ,
.BR LS: ,
and
.BR LS.
in protocol versions prior to 400.
.LP
All of the following
.BI LS- type
commands include as many of the following parameters as are applicable
to them, in addition to type-specific parameters:
'\" <<desc>>
.TP
.B ID
The unique object identifier. This is a string containing upper- or lower-case
letters, digits, underscores and octothorpes. By convention, we create these
as hexadecimal UUID values, but they may be any arbitrary string, including
human-readable IDs such as \*(lqPC1\*(rq, etc.
.TP
.BI X " (float)"
The
.I x
coordinate of the \*(lqreference point\*(rq of the element, in standard map pixel units.
.TP
.BI Y " (float)"
The
.I y
coordinate of the \*(lqreference point\*(rq of the element, in standard map pixel units.
.TP
.BI Points " (list of coordinate objects)"
If an object needs more than a single coordinate pair to specify their
location, (e.g., the diagonally opposite corner of a rectangle)
the subsequent points are listed in this parameter. Each
element in the list is an object with the fields:
'\" <<desc>>
.RS
.TP
.BI X " (float)"
The
.I x
coordinate in standard map pixel units.
.TP
.BI Y " (float)"
The
.I y
coordinate in standard map pixel units.
.RE
'\" <</>>
.TP
.BI Z " (int)"
The
.I z
\*(lqcoordinate\*(rq of the element is its vertical stacking order
on the displayed map canvas. Higher numbers are drawn after lower numbers.
If two objects have the same
.I z
value and physically overlap, the result is not defined.
.TP
.BI Line
The color used to draw the shape's outline, as a standard color
name or RGB string such as \*(lq#336699\*(rq.
.TP
.BI Fill
As with the
.I line
field, specifies a color to fill the interior of the element. If omitted or
empty, the object will not be filled. Note that line objects are
.I filled
with the 
.I fill
color. They don't have an outline so don't use the
.I line
value.
.TP
.BI Width " (int)"
The width in pixel units of the element's outline.
.TP
.BI Layer
The map layer this element belongs to. 
Currently not implemented.
.TP
.BI Level
The dungeon level where this element appears. 
Currently not implemented.
.TP
.BI Group
The object group to which this element belongs.
Currently not implemented.
.TP
.BI Dash " (int)"
The outline of the element is to be drawn with the specified dash pattern:
'\" <<desc>>
.RS
.TP 3
0
Solid (the default)
.TP
1
Long dashes
.TP
2
Medium dashes
.TP
3
Short dashes
.TP
4
Long-Short pattern
.TP
5
Long-Long-Short pattern
'\" <</>>
.RE
.TP
.BI Hidden " (bool)"
If true, this element MUST NOT be displayed on-screen.
.TP
.BI Locked " (bool)"
If true, this element MUST NOT be edited further by clients.
'\" <</>>
.RS
.LP
Each of the following commands which begin with 
.B LS-
defines a different kind of map element.
.RE
.TP
.B LS-ARC
Draws an arc on the canvas. 
The arc is drawn around the circumference
of the ellipse inscribed in the rectangle defined by the reference point and the
first point in the
.I points
attribute (as opposite corners of a rectangle).
The payload is a JSON object with these parameters in addition to
those common to all map elements:
'\" <<desc>>
.RS
.TP
.BI ArcMode " (int)"
Specifies how to draw the arc on-screen. 
'\" <<desc>>
.RS
.TP 3
0
Pie slice (default); connects the arc endpoints to the center of the circle.
.TP
1
Arc; does not connect the endpoints to anything else.
.TP
2
Chord; connects the endpoints to each other via a straight line segment.
'\" <</>>
.RE
.TP
.BI Start " (float)"
The number of degrees around the circle to begin drawing the arc.
.TP
.BI Extent " (float)"
The number of degrees around the circle to end drawing the arc.
'\" <</>>
.RE
.TP
.B LS-CIRC
Draws an ellipse on the map canvas.
The payload is a JSON object as described for all map elements above.
The ellipse is defined as described for the 
.B LS-ARC
command, but the entire circumference is drawn.
.TP
.B LS-LINE
Draws a straight line segment from the reference point to the
each point in the
.I points
attribute (if more than one point is in
.I points
the result will be multiple connected line segments).
The JSON payload has the following attribute in addition to the common
ones described above:
'\" <<desc>>
.RS
.TP
.BI Arrow " (int)"
The style of arrows to draw on the ends of the line:
'\" <<desc>>
.RS
.TP 3
0
No arrows
.TP
1
Arrow on the first point (the reference)
.TP
2
Arrow on the last point
.TP
3
Arrows on both first and last points
'\" <</>>
.RE
'\" <</>>
.RE
.TP
.B LS-POLY
Draws a polygon on the map canvas. The vertices of the polygon
start at the reference point and continue through every point in
the 
.I points
attribute, and finally connecting back to the reference
point again. The JSON payload contains
the following fields in addition to the common ones described
above:
'\" <<desc>>
.RS
.TP
.BI Spline " (int)"
The factor to use when smoothing the sides of the polygon
between its points. 0 means not to smooth at all, resulting
in a shape with straight edges between the vertices. Otherwise,
larger values provide more smoothing.
.TP
.BI Join " (int)"
The join style for the edges of the polygon:
'\" <<desc>>
.RS
.TP 3
0 
Beveled corners
.TP
1
Mitered corners
.TP
2
Rounded corners
'\" <</>>
.RE
'\" <</>>
.RE
.TP
.B LS-RECT
Draws a rectangle defined by the reference point and the first point
in the 
.I points
attribute (as opposite corners of the rectangle).
.TP
.B LS-SAOE
Draws the zone of a spell's area of effect on the canvas. 
The JSON payload contains the following field in addition to those 
described above:
'\" <<desc>>
.RS
.TP
.BI AoEShape " (int)"
The shape of the area of effect:
'\" <<desc>>
.RS
.TP 3
0
Cone: a 90\(de pieslice defined as described for a pieslice arc element.
.TP
1
Radius: an ellipse defined as described for a circle element.
.TP
2
Ray: a rectangle defined as described for rectangle elements.
'\" <</>>
.RE
'\" <</>>
.RE
.TP
.B LS-TEXT
Places some text on the canvas. The JSON payload includes the following
fields in addition to those common to all elements:
'\" <<desc>>
.RS
.TP
.B Text
The text to be displayed.
.TP
.BI Font " (object)"
The typeface to use for the text. This is an object with the following
fields:
'\" <<desc>>
.RS
.TP
.B Family
The name of the font family as recognized by Tk.
.TP
.BI Size " (float)"
The font size as recognized by Tk.
.TP
.BI Weight " (int)"
The type wight to use. This may be 0 for normal or 1 for boldface.
.TP
.BI Slant " (int)"
The type slant to use. This may be 0 for Roman (normal) or 1 for Italic (slanted).
.RE
'\" <</>>
.TP
.BI Anchor " (int)"
Where the reference point is considered to be relative to the text:
'\" <<desc>>
.RS
.TP 3
0
Center
.TP
1
North
.TP
2
South
.TP
3
East
.TP
4
West
.TP
5
Northeast
.TP
6
Northwest
.TP
7
Southwest
.TP
8
Southeast
.RE
'\" <</>>
.RE
'\" <</>>
.TP
.B LS-TILE
Draws an image tile on the canvas. The JSON payload has the following
fields in addition to those common to all map elements:
'\" <<desc>>
.RS
.TP
.B Image
The image name as known to the mapper.
.TP
.BI BBHeight " (float)"
The bounding-box height for the region bordering the image.
.TP
.BI BBWidth " (float)"
The bounding-box width for the region bordering the image.
'\" <</>>
.RE
.TP
.B MARCO
Status check. If received, reply with a 
.B POLO
command.
Clients MUST NOT send this command.
.RS
.LP
.B N.B.
It is important that your client not ignore these occasional ping messages.
For example, if your client is too slow receiving messages such that the
server needs to expend extra work to queue them up for you, it will be
willing to do so if you have been at least responding to
.B MARCO
messages. If you haven't, the server will suspect your client has locked up
or is not going to be able to catch up with the data being sent to it, and
may decide to terminate the client's connection.
.RE
.TP
.B MARK
Make a brief animated marker at the specified coordinates to draw attention
to that space. The JSON payload contains the following fields:
'\" <<desc>>
.RS
.TP
.BI X " (float)"
The
.I x
coordinate of the marker.
.TP
.BI Y " (float)"
The 
.I y
coordinate of the marker.
'\" <</>>
.RE
.TP
.B OA
Updates attributes of a specified map object. Any attributes not listed in the
command MUST remain as-is. The JSON payload includes the following fields:
'\" <<desc>>
.RS
.TP 
.B ObjID
The unique object identifier for the object to be modified.
Alternatively, it may be in the form
.BI @ name
where
.I name
is the creature's name in any of the forms allowed for the 
.B AC
command.
.TP
.BI NewAttrs " (object)"
The set of new attributes and their values, expressed as an object with
field names matching the object attributes to be changed and their associated
values being the new values for those attributes.
'\" <</>>
.LP
Example: 
.B "OA {\[dq]ObjID\[dq]:\[dq]a984a3\[dq],\[dq]NewAttrs\[dq]:{\[dq]X\[dq]:12,\[dq]Y\[dq]:44.5}}"
.LP
Note that there was an implicit assumption in the past that the
.B NAME
attribute of a creature would not change and it could be used as an immutable identifier
within a map client for a creature token. However, this is not the case and
in fact GMA now includes explicit features to change this very attribute.
Clients must be prepared to deal with the consequences of a change to any
attribute, including
.BR NAME .
The 
.B mapper
client itself does this correctly starting with version 3.39.
.RE
.TP
.B OA+
Adds one or more values to a single attribute of an object known to the mapper.
The payload is a JSON object with the following fields:
'\" <<desc>>
.RS
.TP
.BI ObjID
The unique object identifier, specified as for the
.B OA
command.
.TP
.BI AttrName
The name of the attribute to be modified. This MUST be an attribute
whose value is a list of strings. (E.g., the 
.B STATUSLIST
attribute of creature objects.)
.TP
.BI Values " (list of strings)"
A list of string values to be added to those already in the named attribute.
.RE
'\" <</>>
.TP
.B OA\-
Removes one or more values from a single attribute of an object known to the mapper.
The payload is a JSON object with the following fields:
'\" <<desc>>
.RS
.TP
.BI ObjID
The unique object identifier, specified as for the
.B OA
command.
.TP
.BI AttrName
The name of the attribute to be modified. This MUST be an attribute
whose value is a list of strings. (E.g., the 
.B STATUSLIST
attribute of creature objects.)
.TP
.BI Values " (list of strings)"
A list of string values to be removed from those already in the named attribute.
It is not an error if the value wasn't there to begin with.
.RE
'\" <</>>
.TP
.B OK
The server sends this to the client when it is ready for the client to start
sending commands to it. The accompanying JSON payload includes the following
fields:
'\" <<desc>>
.RS
.TP
.BI Protocol " (int)"
The protocol version used by the server. Map clients which do not support
that protocol SHOULD warn their users and SHOULD disconnect since they can't
guarantee they can actually communicate with the server.
.TP
.BI Challenge " (base64-encoded bytes)"
If present, the
.I challenge
value is a base-64-encoded authentication challenge. A client must successfully
respond with a valid
.B AUTH
command before any of its commands to the server will be accepted. The server will also
refuse to send the client any map updates until it has successfully authenticated.
'\" <</>>
.RE
.TP
.B PRIV
Notice from the server that a command sent by the client is denied due to
insufficient privilege. Clients MUST NOT send this command. The JSON
payload includes the following field:
'\" <<desc>>
.RS
.TP
.B Command
The command the client was attempting.
.TP
.B Reason
The reason that command was denied.
'\" <</>>
.RE
.TP
.B POLO
No-op. Clients MUST ignore if received. Clients SHOULD send this in response
to a
.B MARCO
command from the server.
.TP
.B PROGRESS
The server sends this to the client to 
indicate progress of a long-running operation such as downloading files.
(Formerly this was sent as a comment prior to protocol version 400.)
The payload is a JSON object with the following fields:
'\" <<desc>>
.RS
.TP
.B OperationID
A unique identifier for the operation we're reporting progress for.
.TP
.B Title
The description of the operation in progress. This is suitable for display to the user.
.TP
.BI Value " (int)"
The current value of the progress meter. Units are arbitrary.
.TP
.BI MaxValue " (int)"
The maximum value expected for the progress meter when it is finished.
If this is 0, we don't yet know what the maximum will be, which SHOULD cause
the client to use a progress meter style that indicates that it is not possible
to estimate remaining time to completion. Also note that this value MAY change
over the course of the progress report if the server becomes aware that it has
a better maximum value available to it at that point.
.TP
.BI IsDone " (bool)"
A boolean indication that the operation is completed. The client SHOULD remove the
progress meter from display when the operation is completed.
'\" <</>>
.LP
Clients SHOULD NOT send these; they are for the server to notify the client
about progress. If a client does send progress update messages to other
peers, it should be clear that what is being tracked is a process that the
other clients are interested in.
.RE
.TP
.BI PS
Place a creature token on the map. This may be used to define a new creature object
if no object with the given
.I ID
already exists, or replaces an existing token with the (possibly different) parameters
given. The JSON payload includes the following fields:
.RS
'\" <<desc>>
.TP 
.B ID
The internal ID by which this creature is to be known. This must be unique. The client
which creates the character token locally should create a unique ID, which is then broadcast
via this command to the other clients, which use the same ID.
.TP
.B Name
The name as displayed on the map. Must be unique among all creatures
currently displayed.
.TP
.BI Health " (object)"
If not
.BR null ,
this gives the current health status of the creature. It is an object with the
following fields:
'\" <<desc>>
.RS
.TP
.BI MaxHP " (int)"
The creature's maximum number of hit points.
.TP
.BI LethalDamage " (int)"
The amount of lethal damage sustained.
.TP
.BI NonLethalDamage " (int)"
The amount of non-lethal damage sustained.
.TP
.BI Con " (int)"
The grace amount of hit points the creature may sustain over their maximum
before they are considered dead.
.TP
.BI IsFlatFooted " (bool)"
If true, the creature is flat-footed.
.TP
.BI IsStable " (bool)"
If true, the creature has been stabilized to prevent death while critically wounded.
Creatures which are in non-critical states of health don't have this attribute set
even though technically (in a sense) they are \*(lqstable\*(rq.
.TP
.BI Condition
A custom condition status to display on the map, if you wish to override the map's
calculation.
.TP
.BI HPBlur " (int)"
If 0, the creature's health is displayed accurately. Otherwise, this gives
the percentage by which to \*(lqblur\*(rq the hit points as seen by the 
players. For example, if
.I HPBlur
is 10, then hit points are displayed only in 10% increments.
'\" <</>>
.RE
.TP
.BI Gx " (float)"
The grid 
.I x
coordinate for the creature's reference point. Note that this is in
grids, not pixel units.
.TP
.BI Gy " (float)"
The grid 
.I y
coordinate for the creature's reference point. Note that this is in
grids, not pixel units.
.TP
.BI Skin " (int)"
If 0, show the default appearance on the creature's token. Otherwise, show
one of the alternative images defined for that creature.
.TP
.BI SkinSize " (list of strings)"
This gives a list of values to use for the
.I size
attribute corresponding to the
.I skin
number. For example, if there are 3 skins defined for a
shape-changing creature, and the first two are medium-size
but the third is large, then 
.I skinsize
would have the value
.BR [\[dq]M\[dq],\[dq]M\[dq],\[dq]L\[dq]] .
.TP
.BI Elev " (int)"
The creature's elevation in feet relative to the \*(lqfloor\*(rq level.
.TP
.BI Color
The color code used to draw the creature's threat zone.
.TP
.BI Note
A note to attach to the creature token to indicate special conditions or status.
.TP
.BI Size
The tactical size category of the creature.
.TP
.BI Area
The tactical size category for the creature's threat zone.
.TP
.BI StatusList " (list of strings)"
A list of condition codes which apply to the character. These are defined by
the
.B DSM
command (q.v.).
.TP
.BI AoE " (object)"
If not
.BR null ,
a spell area of effect should be drawn around the creature.
The value is an object with these fields:
'\" <<desc>>
.RS
.TP
.BI Radius " (float)"
The distance in standard map pixel units away from the creature's center
to the perimeter of the area of effect.
.TP
.BI Color
The color with which to draw the spell area.
.RE
'\" <</>>
.TP
.BI MoveMode " (int)"
The mode of locomotion currently employed by the creature:
'\" <<desc>>
.RS
.TP 3
0
Land (walking)
.TP
1
Burrowing
.TP
2
Climbing
.TP
3
Flying
.TP
4
Swimming
'\" <</>>
.RE
.TP
.BI Reach " (int)"
Indicates if the creature is wielding a reach weapon and thus has an expanded
threat zone. If 0, the threat zone is normal for the creature. If 1, it cannot
attack adjacent foes but has a wider threat space. If 2, it has both threat
zones active at the same time.
.TP
.BI Killed " (bool)"
If true, the creature is dead.
.TP
.BI Dim " (bool)"
If true, the creature does not have initiative now, and their token
should be de-emphasized compared to the one with initiative.
.TP
.BI CreatureType " (int)"
The specific type of creature. This may be 0 if the type is unknown, 1 for
monsters, or 2 for players. Clients MUST NOT set this field to a value other
than 1 or 2.
'\" <</>>
.RE
.TP
.B READY
The server sends this to the client to indicate that all preliminary
data has been sent, authentication (if applicable) has been successful,
and the client may proceed to carry out normal operations now.
.TP
.B ROLL
Reports the results of a die roll initiated by the
.B D
command. Clients MUST NOT send this command. The JSON payload includes the following fields:
'\" <<desc>>
.RS
.TP
.BI Sender
The name of the user who rolled the dice. 
.TP
.BI Recipients " (list of strings)"
The names of the people the message was explicitly addressed to. For
global messages, this should be
.BR null .
.TP
.BI MessageID " (int)"
The unique number assigned by the server for this chat message. (Die roll
results are essentially a kind of chat message.) 
.TP
.BI MoreResults " (bool)"
If true, there will be more
.B ROLL
messages yet to come which are part of the result set for the same die roll
request.
.TP
.B RequestID
The 
.B RequestID
string passed by the client when requesting this die roll, or the empty string
if they didn't.
.TP
.BI ToAll " (bool)"
If true, this is a global message sent to all clients.
The contents of the
.I recipients
field are ignored; it should be omitted or set to
.BR null .
.TP
.BI ToGM " (bool)"
If true, this message will be sent only to the GM. 
The contents of the
.I recipients
field are ignored; it should be omitted or set to
.BR null .
.TP
.BI Title
The title describing the purpose of the die-roll as set by the
user, if any.
The title string may include special formatting codes which will be used by
clients supporting the
.B DICE-COLOR-BOXES
optional feature (see the
.B ALLOW
command for details). Clients which did not request this feature will not
see the special formatting codes in the title string.
.TP
.BI Result " (object)"
The result of the die roll. This is an object with the following fields:
'\" <<desc>>
.RS
.TP
.BI Result " (int)"
The final numerical result of the die-roll.
.TP
.BI InvalidRequest " (bool)"
If true, the die roll never happened because the request could not be understood.
In this case, the details about the request and reason for failure are in the
.B Details
array. The
.B Result
integer field should be disregarded since there was no result generated.
.TP
.BI ResultSuppressed " (bool)"
If true, this result message describes a die roll request without disclosing the
results of the roll. This is used, for example, when sending a die roll for the
GM to see privately (not even showing the requester the result).
In this case, the value of the
.B Result
field should be ignored.
.TP
.BI Details " (list of objects)"
The details behind how that result was generated are given as a list of objects
with the following fields:
'\" <<desc>>
.RS
.TP
.BI Type
A text label describing what the value means in the context of the die-roll
result.
.TP
.BI Value
The value for this part of the result (as a string).
'\" <</>>
.RE
'\" <</>>
.RE
'\" <</>>
.RE
.TP
.B SYNC
This command MUST be ignored if received by a client. A client sends this to the
server to request a replay of map commands which would be necessary to catch it
up to the state the other maps are currently in.
A server may be configured to perform a sync operation upon client connection (after, if 
required, authentication) without the client explicitly sending a
.B SYNC
command to it.
.TP
.B SYNC-CHAT
This command MUST be ignored if received by a client. 
Supersedes the 
.B SYNC
command with
.B CHAT
argument in protocol versions prior to 400.
A client sends this to the
server to request a replay of chat messages (including die-roll result notices)
according to the JSON payload, which may include this field:
'\" <<desc>>
.RS
.TP
.BI Target " (int)"
If missing or 0, all chat messages in the server's history are sent to the client.
Otherwise, if
.I target
is positive, all messages with 
.IR messageID s
greater than
.IR target .
If
.I target
is negative, its absolute value gives the number of recent messages to send
to the client (e.g., if
.I target
is \-50, then the most recent 50 messages are re-sent to the client).
'\" <</>>
.RE
.TP
.B TB
Controls the display of the toolbar in the mapper client.
The JSON payload is an object with the following field:
'\" <<desc>>
.RS
.TP
.BI Enabled " (bool)"
If true, the client SHOULD display its toolbar. If false, the client SHOULD NOT
display it. The client may override this request based on the user's preferences.
'\" <</>>
.RE
.TP
.B TO
Send chat message to a set of recipients. 
The payload is a JSON object with the following fields:
'\" <<desc>>
.RS
.TP
.BI Sender
The name of the user sending the message. Clients SHOULD NOT set this field; it
is set by the server when sending these messages to peers.
.TP
.BI Recipients " (list of strings)"
The names of the people the message was explicitly addressed to. For
global messages, this should be
.BR null .
.TP
.BI MessageID " (int)"
The unique number assigned by the server for this chat message. Clients SHOULD NOT
set this field.
.TP
.BI ToAll " (bool)"
If true, this is a global message sent to all clients.
The contents of the
.I recipients
field are ignored; it should be omitted or set to
.BR null .
.TP
.BI ToGM " (bool)"
If true, this message will be sent only to the GM. 
The contents of the
.I recipients
field are ignored; it should be omitted or set to
.BR null .
.TP
.B Text
The text of the message to be sent.
.RE
'\" <</>>
.TP
.B /CONN
For diagnostic purposes, this command causes the server to send a summary of the
connections it is currently serving. These are sent back to the client
via the
.B CONN
command documented above.
.TP
.B UPDATES
This provides the latest available versions of various programs. A client MAY
alert the user or initiate an automatic upgrade if it recognizes that it or one
of its dependencies is out of date.
Clients MUST NOT send this command.
(Formerly this was sent as a comment prior to protocol version 400.)
The payload contains the following field:
'\" <<desc>>
.RS
.TP
.BI Packages " (list of objects)"
Each element in this list is a JSON object with the following fields:
'\" <<desc>>
.RS
.TP
.B Name
The name of the software package, such as \*(lqmapper\*(rq, \*(lqgo-gma\*(rq, or \*(lqcore\*(rq.
.TP
.BI Instances " (list of objects)"
A list of all available instances of the named package. Each is a JSON object
with the following fields:
'\" <<desc>>
.RS
.TP
.B OS
The name of the operating system platform for which this instance of the package
is available (e.g., \*(lqfreebsd\*(rq, \*(lqlinux\*(rq, \*(lqdarwin\*(rq, \*(lqwindows\*(rq, etc.).
If this is empty, then this instance is platform-independent.
.TP
.B Arch
The name of the hardware architecture for which this instance of the package
is compiled (e.g., \*(lqamd64\*(rq, etc.) If this is empty, then this instance
is architecture-independent.
.TP
.B Version
The semantic version number that users should be using. This is set by the GM
(or designated server administrator\(emhenceforth we will simply use the term
\*(lqGM\*(rq for this role) for their game. It may not necessarily be
the latest version available generally.
.TP
.B Token
The download token used for obtaining a copy of the package. This is entirely
under the GM's control and refers to a file the GM placed on their game server
for their players to access.  The
.I token
value is the non-static part of the download URL from their game server.
.RE
'\" <</>>
.RE
'\" <</>>
.RE
'\" <</>>
.TP
.B "WORLD"
This command provides various campaign-world information useful for the client
to know. Clients MUST NOT send this command. 
The payload includes the following parameters:
'\" <<desc>>
.RS
.TP
.B Calendar
The name of the calendar system in play, as known to the GMA game clock.
(Formerly this was sent as a comment in the form
.BI "// CALENDAR // " system
prior to protocol version 400.)

Declares which calendaring system the various dates and times are based upon.
'\" <</>>
.LP
Example:
.B "WORLD {\[dq]Calendar\[dq]:\[dq]golarion\[dq]}"
.RE
'\" <</>>
'\" <<TeX>>
'\" \label{manpage:mapper:6:protocol:end}
'\" <</TeX>>
.SH "WEIRD SIZES"
.LP
While the mapper implements the standard d20/Pathfinder creature size categories,
including tall (uppercase) and wide (lowercase) variants, sometimes there are special
cases which fall outside that list. The following special codes are also usable:
'\" <<desc>>
.TP 10
.B M20/m20
Medium creature (5-foot space, 5-foot threat zone) with a 20-foot reach zone.
.TP
.B L0/l0
10-foot swarm (10-foot space, no threat or reach zone).
'\" <</>>
.SH INSTALLATION
.LP
To run the mapper, you'll need an up-to-date Tcl/Tk interpreter (8.6 or later), 
and the following packages
in your Tcl runtime library:
'\" <<itemize>>
.TP 3
\(bu
uuid
.TP
\(bu
base64
.TP
\(bu
struct::queue
.TP
\(bu
tklib
'\" <</>>
.LP
Additionally you will need a copy of
.BR curl (1)
installed on your system. 
.LP
If you will be uploading content to the web server (and are authorized to do so),
you will also need to have
.BR ssh (1)
and 
.BR scp (1)
on your system.
.LP
You will need to ensure that the paths to these commands, server name(s), data paths, etc,
are configured correctly for your needs as well.
.SH "SEE ALSO"
.LP
.BR curl (1),
.BR scp (1),
.BR ssh (1),
.BR dice (3),
.BR dice (5),
.BR mapper (5),
.BR gma (6).
.LP
The wiki page 
.B "https://www.madscience.zone/gamers/wiki/GmaSoftwareDevelopment/Protocols/MapperProtocol"
contains more detail on the map protocol, but this manpage is the definitive reference
to the protocol.
.SH AUTHORS
.LP
Steve Willoughby / steve@madscience.zone;
John Mechalas (elevation and movement modes).
.SH HISTORY
.LP
This document describes version 4.x of 
.BR mapper .
This introduces a breaking change from versions 3.x, mostly in terms of the communications
protocol used between the mapper server and clients and the way map data are represented
internally and in the disk files used by the mapper.
.LP
A version of 
.B mapper
was also in version 3 of GMA, but was different in operation.
.LP
As of version 3.25, the operation of the "Push to other clients" button was changed
so that it only works in store-and-forward mode (and is thus reserved essentially
for privileged users only). This was done because the old function of that button
is no longer needed and tended to cause more trouble than it was worth anyway.
.LP
Also changed in 3.25 is the function of the "Sync" button. It used to simply attempt to
reconnect a client to the server (which should automatically happen anyway). Now, since
the server tracks game state, simply exiting and restarting the map client accomplishes
the same effect (possibly better). Now this button requests a "sync" operation with the
server. 
.LP
This document also describes map protocol version 402,
which improved the 
.B ROLL
server message by adding support for blind rolls to the GM.
.LP
Protocol version 401
introduced the
.B Grid
parameter to the
.B AV
command.
.LP
Protocol version 400
changed the server communication protocol to use JSON instead of TCL lists.
It also introduced the
.BR PROGRESS ,
.BR PROTOCOL ,
.BR READY ,
.BR UPDATES ,
and
.B WORLD
commands.
.LP
As of the beta-3 release, the
.B RequestID
and
.B MoreResults
fields were added to die roll requests and results messages.
.LP
Version 332 added the
.B GRANTED
server response, guaranteeing that
.B AUTH
will be followed by a response in any case.
.LP
Version 331
changed the way persistent
chat messages are managed, altering the
.BR ROLL ,
.BR TO ,
.BR SYNC ,
and
.BR CC
commands.
.LP
Version 329 added
the
.B CC
command and the extended form of
.BR SYNC .
.LP
Previously, version 328 introduced
the 
.B ACCEPT
command.
.LP
Version 327 added 
the 
.B DENIED
and
.B PRIV
response commands.
.LP
Version 326 added support
for chat channels and die rolling, and changed the response from the
.B /CONN
command to be a structured sequence of data records rather than sending
the reply in comments.
.LP
Protocol 325 added
connection debugging support by changing the
.B AUTH
command and adding
.BR /CONN .
.LP
The version 324 protocol added the
.BR DSM ,
.BR OA+ ,
and
.BR OA\-
protocol commands. This version of the protocol also assumes mapper file format
15 is being used.
.LP
Previously, protocol version 323 added support for server-side persistent 
state and the introduction of the
.B SYNC
protocol command.
.LP
Protocol version 322 added comments to version 321.
.LP
Protocol version 321 added authentication support to the 
capabilities of protocol 320.
.LP
Map protocol version 320 has the same commands as 319, but the
.B HEALTH
attribute of creatures changed from map version 12 to 13, so we are advancing the protocol
version at the same time since maps released for protocol 319 were expecting the older map
format.
.LP
Map protocol version 319 differs from version 318 (the first explicitly
numbered version) by the addition of the
.BR CLR@ ,
.BR M? ,
and
.B M@ 
commands.
.SH COMPATIBILITY
.LP
This program requires a reasonably modern version of Tcl/Tk, tcllib and tklib to function properly.
We strongly recommend running it with the latest versions of all of those.
.LP
It is known to run on the macOS Mojave platform (tested on 10.14.6), 
macOS Catalina (tested on 10.15.3, but note that Apple's support for python3, tcl, and tk is such that
you may want to install your own versions of those tools); and should run fine on any
modern *NIX-like platform (tested on FreeBSD 12.0, Ubuntu 18.04 LTS, and Ubuntu 16.04 LTS).
.LP
It was also tested (briefly) on Windows 10. Specific notes about
using it on that platform are in the following section.
.SH "WINDOWS USAGE"
.LP
To install on Windows, you will need to install the following
products in addition to GMA:
'\" <<itemize>>
.TP 4
\(bu
A Tcl/Tk interpreter. We tested with Active Tcl 8.6 from
.IR activestate.com .
.TP
\(bu
The Curl utility. We tested with Curl 7.67.0 from
.IR curl.haxx.se .
.TP
\(bu
The SSH shell program, including the SCP command for copying 
files (if you want to use the store and forward mode to send
data to the server; note that this requires authorization to 
perform that action by the server administrator and that you
have configured the SSH/SCP program(s) with the valid credential
certificates). We tested with PuTTY 0.73 from
.IR www.chiark.greenend.org.uk .
'\" <</>>
.LP
By default, the 
.B mapper
program will try to load its configuration file from 
.IB homedir "\e.gma\emapper\emapper.conf"
if that file exists, where 
.I homedir
is the user's home directory. This allows the mapper to be
launched by double-clicking its file icon without needing to
provide command-line options.
.LP
We recommend that you set up this configuration file before
starting, since we don't currently have a fancy Windows installer
wizard thingy to configure it for you.
.LP
In this file, you will need at a minimum to tell the mapper
where to find the 
.B curl
program and the network locations in use for your game. 
For example:
'\" <<TeX>>
'\" \begin{SourceCode}
'\" curl-path=C:\ecurl-7.67.0-win64-mingw\ebin\ecurl.exe
'\" curl-url-base=https://www.example.org/game/map
'\" host=www.example.org
'\" port=2323
'\" proxy-url=http://proxy.example.org:1080
'\" \end{SourceCode}
.LP
.RS
.nf
.na
.B "curl-path=C:\ecurl-7.67.0-win64-mingw\ebin\ecurl.exe"
.B "curl-url-base=https://www.example.org/game/map"
.B "host=www.example.org"
.B "port=2323"
.B "proxy-url=http://proxy.example.org:1080"
.ad
.fi
.RE
'\" <</TeX>>
.LP
If your game does not use a network server at all, it's possible
you won't need a configuration file.
.LP
Handling of standard output and standard error devices for
printing messages is not as well-supported in Windows as in
Unix-like operating systems, so the mapper will attempt to place
output in files called
.BI mapper. pid .stdout
and
.BI mapper. pid .stderr
in the
.IB homedir "\e.gma\emapper\elogs"
directory. If the mapper just silently fails to start, look
in those to see if there were fatal error messages recorded there.
.LP
The mapper does not currently support being the forwarder in a 
store and forward configuration for Windows clients.
.SH FILES
'\" <<desc>>
.TP
.B ~/.gma/mapper/mapper.conf
Default configuration file read if no explicit
.B \-C
or
.B \-\-config
option is given.
.TP
.B ~/.gma/mapper/style.conf
Default custom style configuration file read if no explicit
.B \-s
or
.B \-\-style
option is given.
.TP
.B ~/.gma/mapper/debug.log
Location where debugging messages are written in addition to being displayed in the debugging window.
.TP
.B ~/.gma/mapper/logs
Runtime logfiles are stored here for each execution of the mapper.
.TP
.B ~/.gma/mapper/cache
Cached copies of images and other content are stored here to improve speed of the mapper.
'\" <</>>
.SH BUGS
.LP
There are numerous hacks in the program which really should not be there.
In fact, at this point the thing just needs to be rewritten using the newer
GMA code base.
.LP
Calculation of threatened spaces needs to take elevation into account.
(Although the mapper now includes a 3D-aware distance calculation when requested.)
.LP
The
.B \-h
option really should have been for
.B \-\-help
to conform to usual command-line conventions, and the 
.B \-\-host
option should instead have been
.BR \-H .
This may change in the future.
.LP
In previous versions,
.B \-\-keep\-tools
.RB ( \-k )
was called 
.B \-\-master
.RB ( \-m ),
but this never really made sense, as it didn't really mean the mapper
was in any sort of controlling or leadership role. It only meant it would
refuse to turn off its own toolbar if asked to do so. The new name is
more descriptive of the actual function.
.SH COPYRIGHT
Part of the GMA software suite, copyright \(co 1992\-2023 by Steven L. Willoughby, Aloha, Oregon, USA. All Rights Reserved. Distributed under BSD-3-Clause License. \"@m(c)@
